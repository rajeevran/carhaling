{"version":3,"sources":["logo.svg","shared/baseUrl.js","actions/admin.js","components/header/Header.js","components/menu/Menu.js","components/footer/Footer.js","components/dashboard/Dashboard.js","components/login/LoginForm.js","shared/utils.js","components/admin/AdminForm.js","components/admin/Admin.js","components/admin/AdminList.js","components/driver/DriverForm.js","components/driver/Thumb.js","components/driver/Driver.js","components/driver/DriverList.js","components/customer/CustomerForm.js","components/customer/Thumb.js","components/customer/Customer.js","components/customer/CustomerList.js","actions/terms.js","components/terms/Term.js","components/terms/TermList.js","components/terms/TermForm.js","actions/privacy.js","components/privacy/Privacy.js","components/privacy/PrivacyList.js","components/privacy/PrivacyForm.js","actions/booking.js","components/booking/BookingForm.js","components/booking/Booking.js","components/booking/BookingList.js","actions/aboutus.js","components/aboutus/Aboutus.js","components/aboutus/AboutusList.js","components/aboutus/AboutusForm.js","components/admin/ChangePassword.js","App.js","serviceWorker.js","reducers/adminReducer.js","reducers/privacyReducer.js","reducers/termReducer.js","reducers/aboutusReducer.js","reducers/bookingReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","baseUrl","postLoginOutAdmin","localStorage","setItem","JSON","stringify","token","isAuthenticated","name","id","profileImage","console","log","getItem","getToken","fetchAdmin","page","limit","searchName","dispatch","parse","type","headers","axios","get","params","adminId","then","res","payload","data","catch","err","response","postDeleteAdmin","postData","post","fetchUser","role","userId","postAddUser","formData","FormData","key","append","postEditUser","postSendEmail","postDeleteUser","Header","state","logout","onClickLogOut","e","setState","this","to","push","style","position","width","height","top","left","right","bottom","zIndex","cursor","display","className","aria-hidden","href","data-toggle","title","marginRight","pathname","onClick","Component","Menu","src","alt","float","activeStyle","background","color","paddingRight","Footer","Dashboard","withFormikData","withFormik","mapPropsToValues","values","email","password","validationSchema","yup","shape","required","handleSubmit","formikBag","props","postLoginAdmin","resetForm","authentication","login","message","success","component","touched","errors","placeholder","connect","adminReducer","usePrevious","value","ref","useRef","useEffect","current","list","isloading","isSuccess","postAddAdmin","postEditAdmin","history","useHistory","prevIsSuccess","match","undefined","toast","setTimeout","goBack","warn","pathEditView","path","split","isAddMode","definedid","definedfirstName","definedlastName","definedemail","definedstatus","defineddeleteId","definedprofileImage","definedimageSavedUrl","docs","length","map","_id","firstName","lastName","status","valdationShape","addEditFields","deleteId","imagePreviewUrl","Yup","concat","min","confirmPassword","when","schema","oneOf","imageSavedUrl","initialValues","onSubmit","fields","minHeight","Row","Col","xs","md","size","offset","fullPage","loading","isSubmitting","setFieldValue","data-original-title","FormGroup","row","lg","accept","onChange","preventDefault","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","as","data-dismiss","document","getElementById","click","onDeleteAdmin","data-target","handlePageSearch","textAlign","STATUSCODE","activePage","itemsCountPerPage","totalItemsCount","total","pageRangeDisplayed","pageNumber","React","userList","bookingList","ismailsend","sendmailmessage","fetchBooking","bookingId","isJourneyCompleted","useState","definedphoneNumber","definedrole","definedage","definedcountry","definedcity","defineddob","definedgender","definedcompanyInformation","definedinsuaranceNumber","definedmc","definedvin","defineddot","definedtrip","definedrating","defineddriverDetail","definedcvcCode","definedvalidity","definedaccountHolderName","definedaccountNumber","definedpaymentMethod","definedbankName","definedccbill","definedBookingId","dob","setCounter","photoIndex","isOpenProfileImage","selfieIndex","isOpenSelfie","phoneNumber","age","gender","country","city","driverDetail","ccbill","driverData","companyInformation","insuaranceNumber","mc","vin","dot","trip","rating","paymentData","cvcCode","validity","accountHolderName","accountNumber","paymentMethod","bankName","Date","location","BookingDetail","onBlur","bookingdetail","mode","options","v","label","bookingNumber","withAll","isDisabled","filter","includes","allBookingDetail","setFieldTouched","handleChange","selected","dt","dateFormat","isClearable","showYearDropdown","scrollableYearDropdown","dobDate","year","getFullYear","month","getMonth","getDate","onDeleteDriver","openProfile","openSelfie","onDeleteCustomer","fetchTerm","fetchTermRequest","termId","fetchTermSuccess","fetchTermFailure","users","dangerouslySetInnerHTML","__html","description","termReducer","termlist","postEditTerm","lastIndex","window","lastIndexOf","substring","defineddescription","postAddTerm","Label","for","editor","ClassicEditor","disabled","onInit","event","getData","onFocus","fetchPrivacy","privacyId","privacyReducer","privacylist","postEditPrivacy","postAddPrivacy","fetchBookingRequest","fetchBookingSuccess","fetchBookingFailure","booking","bookingReducer","bookinglist","driverlist","customerlist","postEditBooking","fetchDriver","driverId","fetchCustomer","customerId","pickupDate","setPickupDate","dropDate","setDropDate","definedpickupLocation","defineddropLocation","definedpickupDate","defineddropDate","definedcustomerId","defineddriverId","defineddistance","definedprice","definedbookingNumber","defineddriverStatus","definedcustomerConfirmation","defineddriverConfirmation","definedisJourneyCompleted","defineddeliveryStatus","definedvehicleDetail","definedpickupNotes","pickupLocation","dropLocation","distance","price","driverStatus","customerConfirmation","driverConfirmation","deliveryStatus","vehicleDetail","pickupNotes","vehicleId","DriverDetail","driverdetail","allDriverDetail","CustomerDetail","customerdetail","allCustomerDetail","postAddBooking","Intl","DateTimeFormat","day","format","class","fetchAboutus","aboutUsId","aboutusReducer","aboutuslist","postEditAboutus","postAddAboutus","changepassword","postChangePasswordAdmin","newPassword","Container","fluid","marginLeft","SecuredPath","render","App","urlPath","exact","AdminForm","DriverForm","CustomerForm","Boolean","hostname","initialState","error","sendEmail","combineReducers","action","createStore","rootReducer","applyMiddleware","thunk","AppWithProvider","store","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f220038.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","//export const baseUrl = \"http://localhost:3195/\";\nexport const baseUrl = \"https://nodeserver.mydevfactory.com:3195/\";\n//export const localUrl = \"http://localhost:3190/\";\nexport const localUrl = \"https://nodeserver.mydevfactory.com:3195/\";","import axios from 'axios'\r\nimport { type } from 'os';\r\nimport { baseUrl, localUrl } from '../shared/baseUrl'\r\n\r\nexport const POST_ADMIN_LOGIN_START = 'POST_ADMIN_LOGIN_START'\r\nexport const POST_ADMIN_LOGIN_SUCCESS = 'POST_ADMIN_LOGIN_SUCCESS'\r\nexport const POST_ADMIN_LOGIN_FAILURE = 'POST_ADMIN_LOGIN_FAILURE'\r\n\r\nexport const POST_ADMIN_LOGINOUT_SUCCESS = 'POST_ADMIN_LOGINOUT_SUCCESS'\r\n\r\nexport const FETCH_ADMIN_LIST_START = 'FETCH_ADMIN_LIST_START'\r\nexport const FETCH_ADMIN_LIST_SUCCESS = 'FETCH_ADMIN_LIST_SUCCESS'\r\nexport const FETCH_ADMIN_LIST_FAILURE = 'FETCH_ADMIN_LIST_FAILURE'\r\n\r\nexport const POST_ADMIN_ADD_START = 'POST_ADMIN_ADD_START'\r\nexport const POST_ADMIN_ADD_SUCCESS = 'POST_ADMIN_ADD_SUCCESS'\r\nexport const POST_ADMIN_ADD_FAILURE = 'POST_ADMIN_ADD_FAILURE'\r\n\r\nexport const POST_ADMIN_EDIT_START = 'POST_ADMIN_EDIT_START'\r\nexport const POST_ADMIN_EDIT_SUCCESS = 'POST_ADMIN_EDIT_SUCCESS'\r\nexport const POST_ADMIN_EDIT_FAILURE = 'POST_ADMIN_EDIT_FAILURE'\r\n\r\nexport const POST_SEND_EMAIL_START = 'POST_SEND_EMAIL_START'\r\nexport const POST_SEND_EMAIL_SUCCESS = 'POST_SEND_EMAIL_SUCCESS'\r\nexport const POST_SEND_EMAIL_FAILURE = 'POST_SEND_EMAIL_FAILURE'\r\n\r\n\r\nexport const POST_ADMIN_DELETE_START = 'POST_ADMIN_DELETE_START'\r\nexport const POST_ADMIN_DELETE_SUCCESS = 'POST_ADMIN_DELETE_SUCCESS'\r\nexport const POST_ADMIN_DELETE_FAILURE = 'POST_ADMIN_DELETE_FAILURE'\r\n\r\nexport const POST_ADMIN_CHANGEPASSWORD_START = 'POST_ADMIN_CHANGEPASSWORD_START'\r\nexport const POST_ADMIN_CHANGEPASSWORD_SUCCESS = 'POST_ADMIN_CHANGEPASSWORD_SUCCESS'\r\nexport const POST_ADMIN_CHANGEPASSWORD_FAILURE = 'POST_ADMIN_CHANGEPASSWORD_FAILURE'\r\n\r\nexport const FETCH_USER_LIST_START = 'FETCH_USER_LIST_START'\r\nexport const FETCH_USER_LIST_SUCCESS = 'FETCH_USER_LIST_SUCCESS'\r\nexport const FETCH_USER_LIST_FAILURE = 'FETCH_USER_LIST_FAILURE'\r\n\r\nexport const POST_USER_ADD_START = 'POST_USER_ADD_START'\r\nexport const POST_USER_ADD_SUCCESS = 'POST_USER_ADD_SUCCESS'\r\nexport const POST_USER_ADD_FAILURE = 'POST_USER_ADD_FAILURE'\r\n\r\nexport const POST_USER_EDIT_START = 'POST_USER_EDIT_START'\r\nexport const POST_USER_EDIT_SUCCESS = 'POST_USER_EDIT_SUCCESS'\r\nexport const POST_USER_EDIT_FAILURE = 'POST_USER_EDIT_FAILURE'\r\n\r\nexport const POST_USER_DELETE_START = 'POST_USER_DELETE_START'\r\nexport const POST_USER_DELETE_SUCCESS = 'POST_USER_DELETE_SUCCESS'\r\nexport const POST_USER_DELETE_FAILURE = 'POST_USER_DELETE_FAILURE'\r\n\r\n\r\nexport const FETCH_BOOKING_LIST_START = 'FETCH_BOOKING_LIST_START'\r\nexport const FETCH_BOOKING_LIST_SUCCESS = 'FETCH_BOOKING_LIST_SUCCESS'\r\nexport const FETCH_BOOKING_LIST_FAILURE = 'FETCH_BOOKING_LIST_FAILURE'\r\n\r\n\r\n//...................LOGIN ...............................\r\n\r\nexport const postLoginAdmin = (data) => dispatch =>{\r\n\r\n        console.log('post data--->', data);\r\n       // console.log('post auth data--->', JSON.parse(getToken()).isAuthenticated);\r\n        \r\n        dispatch( {type:'POST_ADMIN_LOGIN_START'} )\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n        }\r\n\r\n        axios\r\n        .post(baseUrl+'admin/adminLogin/', data,  {\r\n            headers: headers\r\n            })\r\n        .then(res =>{\r\n\r\n            console.log('res---->',res)\r\n            let token = '';\r\n            let name = '';\r\n            let id = '';\r\n            let profileImage = '';\r\n            let isAuthenticated = false;\r\n\r\n            if(res.data.success)\r\n            {\r\n                 token = res.data.response.token;\r\n                 name = res.data.response.name;\r\n                 id = res.data.response.id;\r\n                 profileImage = res.data.response.profileImage;\r\n                 isAuthenticated = true;\r\n            }\r\n            \r\n            localStorage.setItem('auth',JSON.stringify(\r\n                {\r\n                    token:token, \r\n                    isAuthenticated: isAuthenticated,\r\n                    id:id, \r\n                    name:name, \r\n                    profileImage:profileImage \r\n\r\n                }\r\n                ));\r\n\r\n            dispatch( { type:'POST_ADMIN_LOGIN_SUCCESS', payload: res.data } )\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            dispatch( { type:'POST_ADMIN_LOGIN_FAILURE', payload: err.response  } )\r\n            \r\n        })\r\n}\r\n\r\nexport const postLoginOutAdmin = () =>{\r\n\r\n\r\n        let token = '';\r\n        let id = '';\r\n        let name = '';\r\n        let profileImage = '';\r\n        let isAuthenticated = false;\r\n        localStorage.setItem('auth',JSON.stringify({\r\n            token:token, \r\n            isAuthenticated: isAuthenticated,\r\n            name:name, \r\n            id:id, \r\n            profileImage:profileImage \r\n        }));\r\n        console.log('Logout data--->',localStorage.getItem('auth'));\r\n    \r\n}\r\n\r\nexport const getToken = () =>{\r\n\r\n    let token = localStorage.getItem('auth');\r\n    //console.log('token-----',token);\r\n    \r\n    return token\r\n}\r\n\r\n//...................ADMIN ...............................\r\nexport const fetchAdmin = (id,page,limit,searchName) => dispatch =>{\r\n\r\n        console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n        //let token = 'eyJhbciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhamVldjVAZ21haWwuY29tIiwiYWRtaW5JZCI6IjVlZWEwMjU2NjlkNTgxNGU0NTBiMGFjZiIsImlhdCI6MTU5MzY3NDgxNCwiZXhwIjoxNTkzNzE4MDE0fQ.10TvFMH9Loo1vxaouYSd_wVnrU7LGQpJZ1wTk3ANVfI'\r\n        let token = JSON.parse(getToken()).token\r\n\r\n        dispatch( {type:'FETCH_ADMIN_LIST_START'} )\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': token\r\n          }\r\n\r\n        axios\r\n        .get(baseUrl+'admin/listAdmin/', {\r\n            headers: headers,\r\n            params:{\r\n                ...(id ? { adminId: id } : {}),\r\n                ...(searchName ? { searchName: searchName } : {}),\r\n                ...(page ? { page: page } : {}),\r\n                ...(limit ? { limit: limit } : {})\r\n            }\r\n            })\r\n        .then(res =>{\r\n            console.log(res)\r\n            dispatch( { type:'FETCH_ADMIN_LIST_SUCCESS', payload: res.data } )\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            dispatch( { type:'FETCH_ADMIN_LIST_FAILURE', payload: err.response  } )\r\n            \r\n        })\r\n}\r\n\r\nexport const postAddAdmin = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_ADMIN_ADD_START'} )\r\n\r\n    console.log('Post add data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n    formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/addAdmin/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_ADMIN_ADD_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_ADMIN_ADD_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postEditAdmin = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_ADMIN_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n      formData.append(key, postData[key]);\r\n    }\r\n   // formData.append('profileImage', updateFile);\r\n   // const headers = new Headers({ 'Accept': 'application/json' });\r\n\r\n    axios\r\n    .post(baseUrl+'admin/editAdmin/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_ADMIN_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_ADMIN_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postChangePasswordAdmin = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_ADMIN_CHANGEPASSWORD_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n      postData.token = token\r\n      \r\n    axios\r\n    .post(baseUrl+'admin/changePassword/',postData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_ADMIN_CHANGEPASSWORD_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_ADMIN_CHANGEPASSWORD_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postDeleteAdmin = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_ADMIN_DELETE_START'} )\r\n\r\n    console.log('Post delete data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/deleteAdmin/',postData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_ADMIN_DELETE_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_ADMIN_DELETE_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\n\r\n//...................USER ...............................\r\nexport const fetchUser = (id,page,limit,searchName,role) => dispatch =>{\r\n\r\n    console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    dispatch( {type:'FETCH_USER_LIST_START'} )\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n      \r\n    axios\r\n    .get(baseUrl+'admin/listUser/', {\r\n        headers: headers,\r\n        params:{\r\n            ...(id ? { userId: id } : {}),\r\n            ...(searchName ? { searchName: searchName } : {}),\r\n            ...(role ? { role: role } : {}),\r\n            ...(page ? { page: page } : {}),\r\n            ...(limit ? { limit: limit } : {})\r\n        }\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'FETCH_USER_LIST_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'FETCH_USER_LIST_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postAddUser = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_USER_ADD_START'} )\r\n\r\n    console.log('post add user data--->', JSON.parse(getToken()).token);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n    formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/addUser/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log('addUser--->',res)\r\n        dispatch( { type:'POST_USER_ADD_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_USER_ADD_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postEditUser = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_USER_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n      formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/editUser/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_USER_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_USER_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\n\r\nexport const postSendEmail = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_SEND_EMAIL_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    // const formData = new FormData();\r\n    // for (const key in postData) {\r\n    //   formData.append(key, postData[key]);\r\n    // }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/sendEmail/',postData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_SEND_EMAIL_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_SEND_EMAIL_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postDeleteUser = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_USER_DELETE_START'} )\r\n\r\n    console.log('Post delete data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    axios\r\n    .post(baseUrl+'api/deleteUser/',postData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_USER_DELETE_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_USER_DELETE_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const fetchBooking = (id) => dispatch =>{\r\n\r\n    console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    dispatch( {type:'FETCH_BOOKING_LIST_START'} )\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n      \r\n    axios\r\n    .get(baseUrl+'admin/listBooking/', {\r\n        headers: headers,\r\n        params:{\r\n            ...(id ? { bookingId: id } : {}),\r\n            isJourneyCompleted: false \r\n        }\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'FETCH_BOOKING_LIST_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'FETCH_BOOKING_LIST_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n","\r\nimport React, { Component, Fragment } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { postLoginOutAdmin, getToken } from '../../actions/admin'\r\nimport { Redirect, Link, withRouter } from 'react-router-dom'\r\nclass Header extends Component \r\n{\r\n\r\n    state= {\r\n        logout:false\r\n    }\r\n\r\n    onClickLogOut = (e) => {\r\n\r\n        postLoginOutAdmin()\r\n        this.setState({logout:true})\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        //console.log('getToken',getToken())\r\n\r\n        const { logout } = this.state\r\n        const { name, profileImage,id } = JSON.parse(getToken())\r\n\r\n        if(logout) \r\n        {\r\n            console.log('logout enter--------');\r\n \r\n            return (<Redirect to=\"/login\" push={true}  />)\r\n        }\r\n        return (\r\n\r\n                 <Fragment>\r\n                        <div id=\"overlay\" style={{ position: 'fixed' , width: '100%', height: '100%', top: 0, left: 0, right: 0, bottom: 0, \r\n                        'backgroundColor': 'rgba(0,0,0,0.5)', zIndex: 2, cursor: 'pointer',  display: 'none'  }}>\r\n                        <i className=\"fa fa-spinner fa-4x\" aria-hidden=\"true\" style={{'marginLeft': '48%', 'marginTop': '20%'}}></i>\r\n                        </div>\r\n            \r\n                        <header className=\"main-header\" >\r\n                            <a  className=\"logo\">\r\n                            \r\n                            <span className=\"logo-mini\">Car Hauling</span>\r\n                            \r\n                            <span className=\"logo-lg\"><b>Car Hauling</b> Admin</span>\r\n                        </a>\r\n                        \r\n                        <nav className=\"navbar navbar-static-top\">\r\n                            \r\n                            <a href=\"javascript:;\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" role=\"button\">\r\n                                <span className=\"sr-only\">Toggle navigation</span>\r\n                                <span className=\"icon-bar\"></span>\r\n                                <span className=\"icon-bar\"></span>\r\n                                <span className=\"icon-bar\"></span>\r\n                            </a>\r\n            \r\n                            <div className=\"navbar-custom-menu\">\r\n                                <ul className=\"nav navbar-nav\">\r\n                                    <li className=\"dropdown user user-menu\">\r\n                                        <a className=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                                            <span className=\"hidden-xs\" style={{\"cursor\": \"pointer\"}}>Welcome {name}</span>\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu\">\r\n                                            <li className=\"user-footer\">\r\n                                               \r\n                                                <div className=\"pull-right\">\r\n                                                    <Link className=\"btn btn-default btn-flat\" title=\"View\" style={{marginRight:'30px'}} to= {{ pathname: `/admin/view/${id}` }}  >\r\n                                                        <i className=\"fa fa-eye\">View Profile</i>\r\n                                                    </Link>\r\n                                                    <a className=\"btn btn-default btn-flat\"  style={{marginRight:'10px'}} onClick={ this.onClickLogOut}  >\r\n                                                    <i className=\"fa fa-sign-out\">Sign out</i>\r\n                                                    </a>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </header>\r\n                </Fragment>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nexport default Header","\r\nimport React, { Component } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport {  getToken } from '../../actions/admin'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\n\r\nclass Menu extends Component \r\n{\r\n\r\n    render(){\r\n        const { name, profileImage } = JSON.parse(getToken())\r\n\r\n        return (\r\n                    <aside className=\"main-sidebar\">\r\n                    <div className=\"sidebar\" >\r\n        \r\n                        <div className=\"user-panel\">\r\n        \r\n                            <div className=\"pull-left image\">\r\n                                <img src={baseUrl+profileImage} className=\"img-circle\" alt=\"Admin Image\" style={{height : '50px'}} />\r\n                            </div>\r\n        \r\n                            <div className=\"pull-left info\">\r\n                                <p>{name}</p>\r\n                                \r\n                            </div>\r\n                        </div>\r\n        \r\n        \r\n                        <ul className=\"sidebar-menu\"  style= {{ float:\"left\"}}>\r\n                                            \r\n                            <li className=\"treeview\">\r\n                            <NavLink\r\n                                        to=\"/admin\"\r\n                                        activeStyle={{\r\n                                        background:'black',\r\n                                        color:'white'\r\n                                        }} \r\n                                        style={{paddingRight:\"43px\"}}\r\n                                        >\r\n                                   \r\n                                        <i className=\"fa fa-cubes\"></i> <span>Admin Management</span>\r\n                                        <span className=\"pull-right-container\">\r\n                                        </span>\r\n                                  \r\n                            </NavLink>                                    \r\n                            </li> \r\n                            \r\n                            <li className=\"treeview\">\r\n                            <NavLink\r\n                                        to=\"/driver\"\r\n                                        activeStyle={{\r\n                                        background:'black',\r\n                                        color:'white'\r\n                                        }}  \r\n                                        style={{paddingRight:\"54px\"}}\r\n                                        >\r\n                                   \r\n                                        <i className=\"fa fa-truck\"></i> <span>Driver Management </span>\r\n                                        <span className=\"pull-right-container\">\r\n                                        </span>\r\n                                  \r\n                            </NavLink>    \r\n                            </li>                                               \r\n                                    \r\n                            <li className=\"treeview\">\r\n                            <NavLink\r\n                                        to=\"/customer\"\r\n                                        activeStyle={{\r\n                                        background:'black',\r\n                                        color:'white'\r\n                                        }}  \r\n                                        style={{paddingRight:\"31px\"}}\r\n                                        >\r\n                                   \r\n                                        <i className=\"fa fa-user-plus\"></i> <span>Customer Management </span>\r\n                                        <span className=\"pull-right-container\">\r\n                                        </span>\r\n                                  \r\n                            </NavLink>    \r\n                            </li>  \r\n\r\n                            <li className=\"treeview\">\r\n                            <NavLink\r\n                                        to=\"/booking\"\r\n                                        activeStyle={{\r\n                                        background:'black',\r\n                                        color:'white'\r\n                                        }}  \r\n                                        style={{paddingRight:\"42px\"}}\r\n                                        >\r\n                                   \r\n                                        <i className=\"fa fa-cart-arrow-down\"></i> <span>Booking Management </span>\r\n                                        <span className=\"pull-right-container\">\r\n                                        </span>\r\n                                  \r\n                            </NavLink>    \r\n                            </li>  \r\n                            <li className=\"treeview\">\r\n                                <NavLink\r\n                                            to=\"/term/\"\r\n                                            activeStyle={{\r\n                                            background:'black',\r\n                                            color:'white'\r\n                                            }}  \r\n                                            style={{paddingRight:\"62px\"}}\r\n                                            >\r\n                                    \r\n                                            <i className=\"fa fa-exclamation-circle\"></i> <span>Term Management </span>\r\n                                            <span className=\"pull-right-container\">\r\n                                            </span>\r\n                                    \r\n                                </NavLink>    \r\n                            </li>  \r\n                                                                \r\n                            <li className=\"treeview\">\r\n                                <NavLink\r\n                                            to=\"/privacy/\"\r\n                                            activeStyle={{\r\n                                            background:'black',\r\n                                            color:'white'\r\n                                            }}  \r\n                                            style={{paddingRight:\"50px\"}}\r\n                                            >\r\n                                    \r\n                                            <i className=\"fa fa-exclamation-triangle\"></i> <span>Privacy Management </span>\r\n                                            <span className=\"pull-right-container\">\r\n                                            </span>\r\n                                    \r\n                                </NavLink>    \r\n                            </li> \r\n                                      \r\n                            <li className=\"treeview\">\r\n                                <NavLink\r\n                                            to=\"/aboutus/\"\r\n                                            activeStyle={{\r\n                                            background:'black',\r\n                                            color:'white'\r\n                                            }}  \r\n                                            style={{paddingRight:\"33px\"}}\r\n                                            >\r\n                                    \r\n                                            <i className=\"fa fa-plus-square-o\"></i> <span>About Us Management </span>\r\n                                            <span className=\"pull-right-container\">\r\n                                            </span>\r\n                                    \r\n                                </NavLink>    \r\n                            </li> \r\n                        </ul>\r\n                        </div>\r\n                    </aside>\r\n            )\r\n        }\r\n}\r\n\r\nexport default Menu","\r\nimport React, { Component } from 'react'\r\nimport { runInThisContext } from 'vm';\r\n\r\nclass Footer extends Component \r\n{\r\n\r\n    render(){\r\n\r\n        return (\r\n                <footer className=\"main-footer\" >\r\n                    <div className=\"pull-right hidden-xs\">\r\n                        <b>Version</b> 0.0.1\r\n                    </div>\r\n                    <strong>Powered by &copy; 2020 <a href=\"http://www.brainiuminfotech.com/\">Brainium Information Technologies\r\n                            Pvt. Ltd.</a></strong> All rights reserved.\r\n                </footer>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nexport default Footer","\r\nimport React, { Component, Fragment } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport Header from '../../components/header/Header'\r\nimport Menu from '../../components/menu/Menu'\r\nimport Footer from '../../components/footer/Footer'\r\nclass Dashboard extends Component \r\n{\r\n\r\n    render(){\r\n\r\n        return (\r\n                <Fragment>\r\n                                <Header />\r\n                                <Menu />\r\n                                <div className=\"login-logo\" style={ {'marginBottom': '370px',\r\n                                                                    'marginTop': '133px'}}>\r\n                                    <p>\r\n                                        <b>Welcome To Car Hauling</b> Admin\r\n                                   </p>\r\n                                </div>\r\n                           \r\n                </Fragment>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nexport default Dashboard","     \r\n\r\n\r\nimport React, { Component, useEffect } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { Switch, Route, Redirect, withRouter  } from 'react-router-dom';\r\nimport { withFormik, Form, Field } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { postLoginAdmin, getToken } from '../../actions/admin'\r\nimport Dashboard from '../../components/dashboard/Dashboard'\r\n\r\nimport { connect } from 'react-redux';\r\n       \r\n\r\n\r\n       const LoginForm = (props) => { \r\n           \r\n        const authentication ={\r\n            isAuthenticated : getToken() !== null ? JSON.parse(getToken()).isAuthenticated: false\r\n        }\r\n        \r\n        console.log('props login---->',props);\r\n        console.log('props authentication---->',JSON.parse(getToken()));\r\n\r\n           return (\r\n\r\n                <div className=\"login-box\">\r\n                <div className=\"login-logo\">\r\n                    <b>Car Hauling</b> Admin\r\n                </div>\r\n                <div className=\"login-box-body\">\r\n                    <p className=\"login-box-msg\">Sign in to start your session</p>\r\n                    \r\n                    { authentication.isAuthenticated === false && <p> {props.login.message} </p> }\r\n                    { props.login.success === true &&  JSON.parse(getToken()).isAuthenticated === true && \r\n                        <Redirect to=\"/dashboard\"  component={() => { return <Dashboard />}} />\r\n                    }\r\n                    <Form >\r\n                        <div className=\"form-group has-feedback\">\r\n                            {props.touched.email && props.errors.email && <p>{props.errors.email}</p>}\r\n                            <label>Email:</label>\r\n                            <Field type=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group has-feedback\">\r\n                        {props.touched.password && props.errors.password && <p>{props.errors.password}</p>}\r\n                            <label>Password:</label>\r\n                            <Field type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\" >Login</button>\r\n                    </Form>\r\n\r\n                    </div>\r\n                </div>     \r\n           )\r\n       }\r\n       \r\n       const withFormikData =  withFormik({\r\n           mapPropsToValues: (values) => {\r\n               return {\r\n                   email: values.email || '',\r\n                   password: values.password || ''\r\n\r\n               }\r\n           },\r\n           validationSchema: yup.object().shape({\r\n               email:yup.string().required('please provide email'),\r\n               password:yup.string().required('please provide password')\r\n           }),\r\n           handleSubmit:( (values, formikBag ) => {\r\n               formikBag.props.postLoginAdmin(values)\r\n               formikBag.resetForm()\r\n           })\r\n         })(LoginForm)\r\n\r\n       const mapStateToProps = ({adminReducer}) => ({\r\n\r\n        login:adminReducer.login\r\n        })\r\n       \r\n       export default connect(mapStateToProps, {postLoginAdmin})(withFormikData)\r\n       \r\n\r\n","import React, { useEffect,  useRef } from 'react'\r\n\r\nexport const usePrevious = (value) => {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    }, [value]); \r\n    return ref.current;\r\n};\r\n","\r\nimport React, { Component, Fragment, useEffect, useState, useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\nimport { postAddAdmin, fetchAdmin, postEditAdmin, postDeleteAdmin } from '../../actions/admin'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\n \r\nimport 'react-overlay-loader/styles.css';\r\nimport {usePrevious} from '../../shared/utils'\r\n\r\n\r\nconst AdminForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   const prevIsSuccess = usePrevious(props.isSuccess);\r\n \r\n    useEffect( ()=>(\r\n        props.fetchAdmin(props.match.params.id)\r\n    ), [])\r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted------->',props.isSuccess);\r\n        console.log('prevIsSuccess ---->',prevIsSuccess);\r\n\r\n        if(prevIsSuccess !== undefined && prevIsSuccess === false)\r\n        {\r\n            if(props.isSuccess === true)\r\n            {\r\n\r\n                toast.success(props.message)\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n            }else if(props.isSuccess === false){\r\n\r\n                toast.warn(props.message)\r\n\r\n            }\r\n        }\r\n\r\n    }, [prevIsSuccess, props.message])\r\n\r\n    console.log('props values--->',props);\r\n\r\n\r\n    const { id } = props.match.params;\r\n    let { path } = props.match;\r\n\r\n    let pathEditView = path.split('/')[2]\r\n    const isAddMode = !id;\r\n    let definedid = ''\r\n    let definedfirstName = ''\r\n    let definedlastName = ''\r\n    let definedemail = ''\r\n    let definedstatus = ''\r\n    let defineddeleteId = ''\r\n    let definedprofileImage = ''\r\n    let definedimageSavedUrl =''\r\n    //deleteId\r\n    if(!isAddMode && props.list.response.docs.length == 1)\r\n    {\r\n        \r\n        props.list.response.docs.map((response) => \r\n        {\r\n            defineddeleteId         = pathEditView == 'delete' ? response._id: ''\r\n            definedid               = response._id\r\n            definedfirstName        = response.firstName\r\n            definedlastName         = response.lastName\r\n            definedemail            = response.email\r\n            definedprofileImage     = response.profileImage\r\n            definedimageSavedUrl    = baseUrl+response.profileImage\r\n            definedstatus           = response.status\r\n        })\r\n    }\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            firstName: definedfirstName,\r\n            lastName: definedlastName,\r\n            email: definedemail,\r\n            profileImage:definedprofileImage,\r\n            status: 'yes',\r\n            password: '',\r\n            imagePreviewUrl:''\r\n        }\r\n\r\n        valdationShape= {\r\n            firstName: Yup.string()\r\n                .required('First Name is required'),\r\n            lastName: Yup.string()\r\n                .required('Last Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required'),\r\n            password: Yup.string()\r\n                .concat(isAddMode ? Yup.string().required('Password is required') : null)\r\n                .min(6, 'Password must be at least 6 characters'),\r\n            confirmPassword: Yup.string()\r\n                .when('password', (password, schema) => {\r\n                    if (password || isAddMode) return schema.required('Confirm Password is required');\r\n                })\r\n                .oneOf([Yup.ref('password')], 'Passwords must match')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            adminId: definedid,\r\n            firstName: definedfirstName,\r\n            lastName: definedlastName,\r\n            profileImage:definedprofileImage,\r\n            imageSavedUrl:definedimageSavedUrl,\r\n            email: definedemail,\r\n            status: definedstatus,\r\n            imagePreviewUrl:''\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            firstName: Yup.string()\r\n                .required('First Name is required'),\r\n            lastName: Yup.string()\r\n                .required('Last Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required'),\r\n            password: Yup.string()\r\n                .min(6, 'Password must be at least 6 characters'),\r\n            confirmPassword: Yup.string()\r\n                .when('password', (password, schema) => {\r\n                    if (password || isAddMode) return schema.required('Confirm Password is required');\r\n                })\r\n                .oneOf([Yup.ref('password')], 'Password must match')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n            //toast.success(\"Admin Added Successfully.\")\r\n\r\n            props.postAddAdmin(fields)\r\n\r\n        } else {\r\n            //toast.success(\"Admin Data Updated Successfully.\")\r\n           // console.log('updated field value',fields);\r\n\r\n            props.postEditAdmin(fields)\r\n\r\n        }\r\n\r\n        // setTimeout( ()=>{\r\n\r\n        //     history.goBack() \r\n\r\n        // },2500)\r\n    }\r\n\r\n    function onDeleteAdmin(id){\r\n        console.log('id---',id);\r\n        props.postDeleteAdmin({adminId:id})\r\n        toast.success(\"Admin Data Deleted Successfully.\")\r\n\r\n        setTimeout( ()=>{\r\n\r\n            document.getElementById('close-delete-button-model').click() ;\r\n\r\n        },2500)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <ToastContainer />\r\n            <Header />\r\n            <Menu />\r\n            <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                 <Row>\r\n                <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n                {props.isloading &&\r\n\r\n                    <Loader fullPage loading />\r\n                }\r\n\r\n                {/*   THIS PART FOR EDIT  START   */}\r\n\r\n                { pathEditView == 'edit' && props.list.success !== false && props.list.response.docs.length == 1  && \r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                    {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                    return (\r\n                        <Form>\r\n\r\n                            <h1>{isAddMode ? 'Add Admin' : 'Edit Admin'}</h1>\r\n\r\n                            <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-cubes\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n\r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>First Name</label>\r\n                                                <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Last Name</label>\r\n                                                <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Email</label>\r\n                                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                            e.preventDefault();\r\n                    \r\n                                                            let reader = new FileReader();\r\n                                                            let file = e.target.files[0];\r\n                                                        \r\n                                                            reader.onloadend = () => {\r\n                                                                console.log('reader.result---',reader.result);\r\n                                                                \r\n                                                                setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                                setFieldValue(`profileImage`, file)\r\n                                                                \r\n                                                            }\r\n                                                        \r\n                                                            reader.readAsDataURL(file)\r\n                    \r\n                    \r\n                                                    }} />\r\n                        \r\n                                                <img src={values.imageSavedUrl}  style={{height:'150px', width:'150px', marginRight:'30px'}} /> \r\n                    \r\n                                                {\r\n                                                    values.imagePreviewUrl && \r\n                                                    \r\n                                                    <img src={values.imagePreviewUrl}  name=\"imagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n                                                    \r\n                                                } \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n                                <Row>\r\n\r\n                                    <Col lg={4}>\r\n                                    <FormGroup>\r\n                                        <label>Status</label>\r\n                                       \r\n                                            <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                    <option value=\"true\">Active</option>\r\n                                                    <option value=\"false\">DeActive</option>\r\n                                            </Field>\r\n\r\n                                            <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                \r\n                                </Row>\r\n\r\n\r\n                                <Row>\r\n                                    <p className=\"btn btn-warning pull-left\"> Leave the password blank if you don't want to change the password</p>\r\n                                </Row>\r\n                                <Row>\r\n                                        <Col lg={6}>\r\n                                        <FormGroup>\r\n                                            <label>Password</label>\r\n\r\n                                                <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                                            \r\n                                                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={6}>\r\n                                        <FormGroup>\r\n                                            <label>Confirm Password</label>\r\n                                        \r\n                                                    <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\r\n                                                \r\n                                                    <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                </Row>\r\n\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n                        </Form>\r\n                    );\r\n                    }}\r\n                </Formik>\r\n                \r\n                }\r\n\r\n                {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {/*   THIS PART FOR VIEW  START   */}\r\n\r\n                { pathEditView == 'view' && props.list.success !== false && props.list.response.docs.length == 1  && \r\n                <Formik initialValues={initialValues}>\r\n                    {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n                    values.status = (values.status === 'yes' || values.status == 'Active') ? 'Active' : 'DeActive'\r\n\r\n                    return (\r\n                        <Form>\r\n\r\n                            <h1>{isAddMode ? 'Add Admin' : 'View Admin'}</h1>\r\n\r\n                            <Row>\r\n                            <Col md={12}>\r\n                            \r\n                                <div className=\"portlet box blue\">\r\n                                    <div className=\"portlet-title\">\r\n                                    <div className=\"caption\">\r\n                                        <i className=\"fa fa-cubes\"></i>\r\n                                    </div>\r\n                                    <div className=\"tools\">\r\n                                        <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                        <div className=\"form-body\">\r\n                                            \r\n                                        <FormGroup row>\r\n                                        <Col md={12}>\r\n\r\n                                            <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                           \r\n                                        </Col>\r\n                                        </FormGroup>\r\n                                        \r\n                                        <Row>\r\n                                            <Col lg={4}>\r\n                                                <FormGroup>\r\n                                                    <label>First Name</label>\r\n                                                    <span name=\"firstName\"  className='form-control  no-border'>\r\n                                                        {values.firstName}\r\n                                                    </span>\r\n                                                                                               \r\n                                                </FormGroup>\r\n                                            \r\n                                            </Col>\r\n                                            \r\n                                            <Col lg={4}>\r\n                                                <FormGroup>\r\n                                                    <label>Last Name</label>\r\n                                                    <span name=\"lastName\"  className='form-control  no-border'>\r\n                                                        {values.lastName}\r\n                                                    </span>\r\n                                                                                               \r\n                                                </FormGroup>\r\n                                            \r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Email</label>\r\n                                                <span name=\"email\"  className='form-control  no-border'>\r\n                                                        {values.email}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                        </Row>\r\n\r\n                                        <FormGroup>\r\n                                            <label>Profile Image</label>\r\n                                            <div className=\"photo-upload\">                   \r\n                                            \r\n                                                    {\r\n                                                        values.imageSavedUrl && \r\n                                                        <img src={values.imageSavedUrl}  \r\n                                                        style={{height:'150px', width:'150px', marginRight:'30px'}}\r\n                                                        />                            \r\n                                                    }\r\n                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        \r\n                                    <Row>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Status</label>\r\n                                                <span name=\"status\"  className='form-control  no-border'>\r\n                                                        {values.status}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                    \r\n                                    </Row>\r\n\r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n\r\n                                </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n            \r\n                            \r\n                        </Form>\r\n                    );\r\n                    }}\r\n                </Formik>\r\n                }\r\n\r\n                {/*   THIS PART FOR VIEW  END   */}\r\n\r\n\r\n\r\n\r\n\r\n                {/*   THIS PART FOR ADD  START   */}\r\n\r\n                { isAddMode  && \r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                    return (\r\n                        <Form>\r\n\r\n                            <h1>{isAddMode ? 'Add Admin' : 'Edit Admin'}</h1>\r\n                            <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-cubes\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>First Name</label>\r\n                                                <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Last Name</label>\r\n                                                <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Email</label>\r\n                                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                    </Row>\r\n\r\n                                    <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                        // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                                        e.preventDefault();\r\n\r\n                                                        let reader = new FileReader();\r\n                                                        let file = e.target.files[0];\r\n                                                    \r\n                                                        reader.onloadend = () => {\r\n                                                            console.log('reader.result---',reader.result);\r\n                                                            \r\n                                                            setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                            setFieldValue(`profileImage`, file)\r\n                                                            // this.setState({\r\n                                                            // file: file,\r\n                                                            // imagePreviewUrl: reader.result\r\n                                                            // });\r\n                                                        }\r\n                                                    \r\n                                                        reader.readAsDataURL(file)\r\n\r\n\r\n                                                }} />\r\n\r\n                                                {\r\n                                                    values.imagePreviewUrl && \r\n                                                    \r\n                                                    <img src={values.imagePreviewUrl}  name=\"imagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n                                                    \r\n                                                } \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n                                <Row>\r\n\r\n                                    <Col lg={4}>\r\n                                    <FormGroup>\r\n                                        <label>Status</label>\r\n                                       \r\n                                            <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                    <option value=\"true\">Active</option>\r\n                                                    <option value=\"false\">DeActive</option>\r\n                                            </Field>\r\n\r\n                                            <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                \r\n                                </Row>\r\n\r\n                                <Row>\r\n\r\n                                    <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Password</label>\r\n\r\n                                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                                        \r\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n\r\n                                     <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Confirm Password</label>\r\n                                       \r\n                                                <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\r\n                                            \r\n                                                <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n                    \r\n                            \r\n                        </Form>\r\n                    );\r\n                    }}\r\n                </Formik>\r\n                }\r\n                {/*   THIS PART FOR ADD  END   */}\r\n\r\n\r\n\r\n\r\n                {/*   THIS PART FOR DELETE  START   */}\r\n\r\n                { pathEditView == 'delete' && props.list.success !== false && props.list.response.docs.length == 1  && \r\n            \r\n                <div className=\"modal show\" id=\"modal-form-delete\">\r\n                                <input type=\"hidden\" name=\"deleteId\" ></input>\r\n\r\n                                <div className=\"modal-dialog\">\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modal-header\">\r\n                                        <Link to={'/admin'}>\r\n\r\n                                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n                                        </Link>\r\n                                            <h4 className=\"modal-title\" id=\"myModalLabel\"></h4>\r\n                                        </div>\r\n                                        <div className=\"modal-body\">\r\n\r\n                                                <div className=\"row\">\r\n                                                        <div className=\"col-sm-12\">\r\n                                                            <div className=\"form-group\" >\r\n                                                                <label >Are You Sure You want to delete ?</label>\r\n                                                            </div>\r\n                                    \r\n                                                        </div>\r\n                                                    </div>                        \r\n\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n\r\n                                                    <Link to={'/admin'} className=\"btn btn-link\">\r\n\r\n                                                        <button type=\"button\" className=\"btn btn-default\" id=\"close-delete-button-model\"\r\n                                                            data-dismiss=\"modal\">Close</button>\r\n\r\n                                                    </Link>\r\n                                                \r\n                                                        <button type=\"submit\" className=\"btn btn-primary\" onClick = { () => { onDeleteAdmin(id) } }\r\n                                                    >Delete</button>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                </div> \r\n                }\r\n\r\n                {/*   THIS PART FOR DELETE  START   */}\r\n\r\n            </Row>\r\n            </div>\r\n            <Footer />\r\n\r\n        </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n\r\n    list        : adminReducer.list,\r\n    isloading   : adminReducer.isloading,\r\n    message     : adminReducer.message,\r\n    isSuccess   : adminReducer.isSuccess\r\n})\r\n\r\nexport default connect(mapStateToProps, { postAddAdmin, postEditAdmin, postDeleteAdmin, fetchAdmin })(AdminForm)\r\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\n\r\nimport AdminForm from './AdminForm'\r\nimport { postDeleteAdmin } from '../../actions/admin'\r\n\r\nconst Admin = (props) => {\r\n\r\n    console.log('admin props --->',props);\r\n\r\n    return ( \r\n                <Fragment>\r\n                    <tr >\r\n                        <td >\r\n                            <img style= {{ height: '50px', width: '50px'}} src={baseUrl+props.profileImage} />   \r\n                        </td>\r\n                        <td >{props.firstName}</td>  \r\n                        <td >{props.lastName}</td>                          \r\n                        <td>{props.email}</td>\r\n                        <td>{props.status === 'yes' ? 'Active':'DeActive'}</td>\r\n                   \r\n                        <td className=\"text-center\">\r\n                                <Link className=\"view\" title=\"View\" style={{marginRight:'5px'}} to= {{ pathname: `/admin/view/${props._id}` }}  >\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Edit\" style={{marginRight:'5px'}} to= {{ pathname: `/admin/edit/${props._id}` }}  >\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Delete\" to= {{ pathname: `/admin/delete/${props._id}` }}  >\r\n                                    <i className=\"fa fa-trash\" ></i>\r\n                                </Link>\r\n                        </td>\r\n                    </tr>\r\n   \r\n                </Fragment>                 \r\n            )\r\n    }\r\n    export default connect(null, { postDeleteAdmin })(Admin)\r\n\r\n//export default Admin","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Loader } from 'react-overlay-loader';\r\n \r\nimport 'react-overlay-loader/styles.css';\r\nimport { fetchAdmin } from '../../actions/admin'\r\nimport Header from '../../components/header/Header'\r\nimport Menu from '../../components/menu/Menu'\r\nimport Footer from '../../components/footer/Footer'\r\nimport Admin  from './Admin'\r\nimport LoginForm  from '../login/LoginForm'\r\n\r\nconst AdminList = props => {\r\n    console.log(props)\r\n\r\n    useEffect( ()=>(\r\n        props.fetchAdmin()\r\n    ), [])\r\n\r\n\r\n    const history = useHistory();\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchAdmin(undefined, pageNumber ,10)\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchAdmin(undefined, undefined ,undefined,e.target.value)\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchAdmin(undefined, undefined ,undefined,'')\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n<div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Admin Management</h5>\r\n                                    <Link to= {{ pathname: `/admin/add` }}  >\r\n                                            <button title=\"Add new\" id=\"modal-add\" className=\"btn btn-primary pull-right\"\r\n                                            data-target=\"#modal-form-Edit\" data-toggle=\"modal\">\r\n                                            <i className=\"fa fa-plus\"></i> Add Admin</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n                                            <input id=\"searchinput\" placeholder=\"Search By Admin Name\" type=\"search\" onChange={ (e) => { handlePageSearch(e) } } className=\"form-control\" />\r\n                                            \r\n                                            <span id=\"searchclear\" className=\"glyphicon\" onClick={ ()=> {handleClear()}}>\r\n                                                <i className=\"fa fa-times\"></i>\r\n                                            </span>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>Profile Image</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>First Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Last Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Email</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Status</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                            {(function() {\r\n                                                \r\n                                                if (props.isloading) {\r\n                                                    return (\r\n\r\n                                                       <Loader fullPage loading />\r\n                                               \r\n                                                    )\r\n                                                 }else \r\n                                                if (props.list.success !== false && props.list.STATUSCODE !== 4000) {\r\n\r\n                                                    return props.list.response.docs\r\n                                                    .map( list => <Admin key={list._id} {...list}/> );\r\n\r\n                                                } else if (props.list.success === false && props.list.STATUSCODE === 4000){\r\n                                                    return  history.push('/login')\r\n                                                }\r\n                                            })\r\n                                            ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.list.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.list.response.page}\r\n                                            itemsCountPerPage={props.list.response.limit}\r\n                                            totalItemsCount={props.list.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <Footer />\r\n            </div>\r\n\r\n   \r\n  \r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n\r\n    list:adminReducer.list,\r\n    isSuccess   : adminReducer.isSuccess,\r\n    message     : adminReducer.message,\r\n    isloading:adminReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchAdmin})(AdminList)","\r\nimport React, { Component, Fragment, useEffect, useState, useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage, FieldArray } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\nimport { postAddUser, fetchUser, postEditUser, postDeleteUser, postSendEmail, fetchBooking } from '../../actions/admin'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\nimport NumericInput from 'react-numeric-input';\r\nimport 'react-overlay-loader/styles.css';\r\nimport Select from 'react-select';\r\nimport ReactDropzone from \"react-dropzone\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {usePrevious} from '../../shared/utils'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';  \r\nimport Thumb from './Thumb'\r\n\r\nconst DriverForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   let textInput = useRef(null);\r\n   let [adminres, setAdminres] = useState(null);\r\n\r\n   function handleAdminResponse(e) {\r\n\r\n        console.log('e---',e.target.value);\r\n        setAdminres(e.target.value)\r\n\r\n   }\r\n\r\n   function validateEmail(email) {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n   function focusTextInput(adminresponse,email,fullname) {\r\n    // console.log('adminresponse---',adminresponse);\r\n    // console.log('email---',email);\r\n    // console.log('fullname---',fullname);\r\n\r\n        if(adminresponse == '')\r\n        {\r\n            toast.warn(`Please enter the  Admin response`)\r\n        }else  if(email == '')\r\n        {\r\n            toast.warn(`Please enter the Email`)\r\n        }else  if(!validateEmail(email))\r\n        {\r\n            toast.warn(`Please enter the valid Email`)\r\n        }else  if(fullname == '')\r\n        {\r\n            toast.warn(`Please enter the Full Name`)\r\n        }else{\r\n\r\n            props.postSendEmail(\r\n                {\r\n                    adminresponse:adminresponse,\r\n                    email:email,\r\n                    name:fullname\r\n                }   \r\n            )\r\n\r\n            toast.success(`Mail has been sent to ${fullname}`)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect( ()=>{\r\n        props.fetchUser(props.match.params.id)\r\n        props.fetchBooking()\r\n        }, [])\r\n\r\n\r\n    console.log('props values--->',props);\r\n\r\n    const { id }         = props.match.params;\r\n    let { path }         = props.match;\r\n    let pathEditView     = path.split('/')[2]\r\n    const isAddMode      = !id;\r\n    const prevIsSuccess  = usePrevious(props.isSuccess);    \r\n    const prevIsMailsend = usePrevious(props.ismailsend);    \r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted',props.isSuccess);\r\n\r\n        if(prevIsSuccess !== undefined && prevIsSuccess === false)\r\n        {\r\n            if(props.isSuccess === true)\r\n            {\r\n\r\n                toast.success(props.message)\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n            }else if(props.isSuccess === false){\r\n\r\n                toast.warn(props.message)\r\n\r\n            }\r\n        }\r\n\r\n    }, [prevIsSuccess, props.message])\r\n\r\n\r\n    let definedid                 = ''\r\n    let definedfirstName          = ''\r\n    let definedlastName           = ''\r\n    let definedemail              = ''\r\n    let definedphoneNumber        = ''\r\n    let definedlocation           = ''\r\n    let definedrole               = ''\r\n    let definedage                = ''\r\n    let definedcountry            = ''\r\n    let definedcity               = ''\r\n    let defineddob                = ''\r\n    let definedgender             = ''\r\n    let definedstatus             = ''\r\n    let defineddeleteId           = ''\r\n    let definedprofileImage       = ''\r\n    let definedimageSavedUrl      =''\r\n    let definedselfieImage        = ''\r\n    let definedselfieImageSavedUrl=''\r\n    let definedadminresponse      = ''\r\n\r\n    let definedcompanyInformation = ''\r\n    let definedinsuaranceNumber   = ''\r\n    let definedmc                 = ''\r\n    let definedvin                = ''\r\n    let defineddot                = ''\r\n    let definedtrip               = ''\r\n    let definedrating             = ''\r\n    let defineddriverDetail       = []\r\n\r\n\r\n    let definedcvcCode            = ''\r\n    let definedvalidity           = ''\r\n    let definedaccountHolderName  = ''\r\n    let definedaccountNumber      = ''\r\n    let definedpaymentMethod      = ''\r\n    let definedbankName           = ''\r\n    let definedccbill             = []\r\n    let definedBookingId          = []\r\n\r\n\r\n    //deleteId\r\n    let [dob, setCounter]   = useState(null);\r\n    let [open, setOpen]     = useState(false);\r\n    \r\n\r\n    let [openProfile, setOpenProfile] = useState({\r\n        photoIndex: 0,\r\n        isOpenProfileImage: false,\r\n      });\r\n\r\n      let [openSelfie, setOpenSelfie] = useState({\r\n        selfieIndex: 0,\r\n        isOpenSelfie: false,\r\n      });\r\n      \r\n      \r\n    let profile        = []\r\n    let profileArray   = []\r\n    let selfieprofile  = []\r\n    if(!isAddMode && props.userList.response.docs.length == 1)\r\n    {\r\n        props.userList.response.docs.map((response) => \r\n        {\r\n            defineddeleteId          = pathEditView == 'delete' ? response._id: ''\r\n            definedid                = response._id\r\n            definedfirstName         = response.firstName\r\n            definedlastName          = response.lastName\r\n            definedemail             = response.email\r\n            definedphoneNumber       = response.phoneNumber\r\n            definedrole              = response.role\r\n            definedage               = response.age\r\n            definedgender            = response.gender\r\n            definedcountry           = response.country\r\n            definedcity              = response.city\r\n            defineddob               = response.dob\r\n            definedprofileImage      = response.profileImage\r\n\r\n            definedimageSavedUrl     = (response.profileImage != '') ?\r\n                                        baseUrl+response.profileImage : baseUrl+'uploads/dummy/demo-profile.png'\r\n            definedstatus            = response.status\r\n            defineddriverDetail.push(response.driverDetail)\r\n            definedccbill.push(response.ccbill)\r\n\r\n            definedBookingId         = response.bookingId\r\n\r\n            console.log('defineddriverDetail---->',defineddriverDetail)\r\n            if(response.driverDetail !== null){\r\n                defineddriverDetail.map( (driverData) => {\r\n                    console.log('driverData---->',driverData)\r\n\r\n                    definedcompanyInformation= driverData.companyInformation\r\n                    definedinsuaranceNumber  = driverData.insuaranceNumber\r\n                    definedmc                = driverData.mc\r\n                    definedvin               = driverData.vin\r\n                    defineddot               = driverData.dot\r\n                    definedtrip              = driverData.trip\r\n                    definedrating            = driverData.rating\r\n                })\r\n            }\r\n\r\n            if(response.ccbill !== null)\r\n            {  \r\n                definedccbill.map( (paymentData) => {\r\n\r\n                    definedcvcCode          = paymentData.cvcCode\r\n                    definedvalidity         = paymentData.validity\r\n                    definedaccountHolderName= paymentData.accountHolderName\r\n                    definedaccountNumber    = paymentData.accountNumber\r\n                    definedpaymentMethod    = paymentData.paymentMethod\r\n                    definedbankName         = paymentData.bankName\r\n                })\r\n            }\r\n       })\r\n\r\n    }\r\n    useEffect( ()=>{\r\n\r\n         if(defineddob && defineddob != '' )\r\n        {\r\n            setCounter(new Date(defineddob))\r\n        }\r\n\r\n    },[defineddob])\r\n\r\n \r\n    const closeLightbox = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n        addEditFields ={\r\n            deleteId                : defineddeleteId,\r\n            firstName                : definedfirstName,\r\n            lastName                : definedlastName,\r\n            email                   : definedemail,\r\n            phoneNumber             : definedphoneNumber,\r\n            location                : definedlocation,\r\n            role                    : definedrole,\r\n            age                     : definedage,\r\n            gender                  : definedgender,\r\n            country                 : definedcountry,\r\n            city                    : definedcity,\r\n            dob                     : defineddob,\r\n            profileImage            : definedprofileImage,\r\n            status                  : 'false',\r\n            password                : '',\r\n            imagePreviewUrl         : '',\r\n            \r\n            bookingId               : definedBookingId,\r\n            companyInformation      : definedcompanyInformation,\r\n            insuaranceNumber        : definedinsuaranceNumber,\r\n            mc                      : definedmc,\r\n            vin                     : definedvin,\r\n            dot                     : defineddot,\r\n            trip                    : definedtrip,\r\n            rating                  : definedrating,\r\n\r\n            \r\n            cvcCode                 : definedcvcCode,\r\n            validity                : definedvalidity,\r\n            accountHolderName       : definedaccountHolderName,\r\n            accountNumber           : definedaccountNumber,\r\n            paymentMethod           : definedpaymentMethod,\r\n            bankName                : definedbankName\r\n\r\n        }\r\n\r\n        valdationShape= {\r\n            firstName: Yup.string()\r\n                .required('Full Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required'),\r\n            password: Yup.string()\r\n                .concat(isAddMode ? Yup.string().required('Password is required') : null)\r\n                .min(6, 'Password must be at least 6 characters'),\r\n            confirmPassword: Yup.string()\r\n                .when('password', (password, schema) => {\r\n                    if (password || isAddMode) return schema.required('Confirm Password is required');\r\n                })\r\n                .oneOf([Yup.ref('password')], 'Passwords must match')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId                : defineddeleteId,\r\n            userId                  : definedid,\r\n            firstName               : definedfirstName,\r\n            lastName                : definedlastName,\r\n            profileImage            : definedprofileImage,\r\n            imageSavedUrl           : definedimageSavedUrl,\r\n            email                   : definedemail,\r\n            phoneNumber             : definedphoneNumber,\r\n            location                : definedlocation,\r\n            role                    : definedrole,\r\n            age                     : definedage,\r\n            gender                  : definedgender,\r\n            country                 : definedcountry,\r\n            city                    : definedcity,\r\n            dob                     : defineddob,\r\n            status                  : definedstatus,\r\n            imagePreviewUrl         : '',\r\n            bookingId               : definedBookingId,\r\n            companyInformation      : definedcompanyInformation,\r\n            insuaranceNumber        : definedinsuaranceNumber,\r\n            mc                      : definedmc,\r\n            vin                     : definedvin,\r\n            dot                     : defineddot,\r\n            trip                    : definedtrip,\r\n            rating                  : definedrating,\r\n\r\n            cvcCode                 : definedcvcCode,\r\n            validity                : definedvalidity,\r\n            accountHolderName       : definedaccountHolderName,\r\n            accountNumber           : definedaccountNumber,\r\n            paymentMethod           : definedpaymentMethod,\r\n            bankName                : definedbankName\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            firstName: Yup.string()\r\n                .required('Full Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n        \r\n        fields.driverDetail = JSON.stringify({\r\n                                    companyInformation  : fields.companyInformation,\r\n                                    insuaranceNumber    : fields.insuaranceNumber,\r\n                                    mc                  : fields.mc,\r\n                                    vin                 : fields.vin,\r\n                                    dot                 : fields.dot,\r\n                                    trip                : fields.trip,\r\n                                    rating              : fields.rating\r\n                             })\r\n\r\n       fields.ccbill = JSON.stringify({\r\n                                paymentMethod           : fields.paymentMethod,\r\n                                accountNumber           : fields.accountNumber,\r\n                                accountHolderName       : fields.accountHolderName,\r\n                                bankName                : fields.bankName,\r\n                                validity                : fields.validity,\r\n                                cvcCode                 : fields.cvcCode\r\n                         })\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n\r\n            props.postAddUser(fields)\r\n\r\n        } else {\r\n\r\n            props.postEditUser(fields)\r\n        }\r\n\r\n    }\r\n\r\n    function onDeleteDriver(id){\r\n        console.log('id---',id);\r\n        props.postDeleteUser({userId:id})\r\n        toast.success(\"Driver Data Deleted Successfully.\")\r\n\r\n        setTimeout( ()=>{\r\n\r\n            document.getElementById('close-delete-button-model').click() ;\r\n\r\n        },2500)\r\n\r\n    }\r\n    const setCount = date => {\r\n\r\n       console.log('setCount date---',setCount);\r\n        setCounter(date);\r\n\r\n    };\r\n\r\n\r\n    const BookingDetail=({onChange, onBlur, name, bookingdetail, value, errors, touched,mode}) => {\r\n        console.log('value---------->',value);\r\n        console.log('bookingdetail---------->',bookingdetail);\r\n        //let savedValue= value.map( mappval => mappval._id)\r\n\r\n        const handleChange = value => {\r\n            console.log('value on change---------->',value);\r\n            \r\n        // This is going to call setFieldValue and manually update values \r\n        onChange(name, value !== null ? [value.value] : [] );\r\n        };\r\n    \r\n        const handleBlur = () => {\r\n        // this is going to call setFieldTouched and manually update touched.topcis\r\n        onBlur(name, true);\r\n        };\r\n\r\n        return (\r\n        <div>\r\n            <Select\r\n            options={bookingdetail.map(v=>({value:v._id, label:v.bookingNumber}))}\r\n            withAll={true}\r\n            isDisabled={mode == 'view'? true:false}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={bookingdetail.map(v=>({value:v._id, label:v.bookingNumber})).filter(v=> {\r\n                if(value !== null)\r\n                {\r\n                   return value.includes(v.value) \r\n\r\n                }else{\r\n\r\n                }\r\n                \r\n            })\r\n         }\r\n\r\n            />\r\n        </div>);\r\n    }\r\n\r\n    let allBookingDetail = []\r\n\r\n    if (props.bookingList.success !== false && props.bookingList.STATUSCODE !== 400) {\r\n        allBookingDetail=props.bookingList.response.docs\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"wrapper\">\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n            {props.isloading &&\r\n\r\n                           <Loader fullPage loading />\r\n\r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n            { pathEditView == 'edit' && props.userList.success !== false && props.userList.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue, setFieldTouched,handleChange }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Driver' : 'Edit Driver'}</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-user-plus\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        \r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Basic Information :</span></label>\r\n                                                                                            \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>First Name</label>\r\n                                                <Field name=\"firstName\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Last Name</label>\r\n                                                <Field name=\"lastName\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Email</label>\r\n                                            <Field name=\"email\"  type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Phone Number</label>\r\n                                            <Field name=\"phoneNumber\" type=\"text\" className={'form-control' + (errors.phoneNumber && touched.phoneNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"phoneNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                     \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Role</label>\r\n                                            <Field name=\"role\" as=\"select\" className={'form-control' + (errors.role && touched.role ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"driver\">Driver</option>\r\n                                                        <option value=\"customer\">Customer</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"role\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>DOB</label>\r\n                                            <div>\r\n                                            <DatePicker\r\n                                                    selected={dob}\r\n                                                    onChange={(dt) => {\r\n                                                    // console.log('dt----',dt);\r\n                                                        setCounter(dt)\r\n                                                        setFieldValue(`dob`,new Date(dt))\r\n                                                    }}\r\n                                                    dateFormat = 'yyyy-MM-dd'\r\n                                                    isClearable\r\n                                                    showYearDropdown\r\n                                                    scrollableYearDropdown\r\n                                            />\r\n                                            </div>\r\n                                            <ErrorMessage name=\"dob\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Gender</label>\r\n                                            <Field name=\"gender\" as=\"select\" className={'form-control' + (errors.gender && touched.gender ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"Male\">Male</option>\r\n                                                        <option value=\"Female\">Female</option>\r\n                                                        <option value=\"Others\">Others</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Status</label>\r\n                                        \r\n                                                <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                        <option value=\"true\">Active</option>\r\n                                                        <option value=\"false\">DeActive</option>\r\n                                                </Field>\r\n\r\n                                                <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                        // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                                        e.preventDefault();\r\n\r\n                                                        let reader = new FileReader();\r\n                                                        let file = e.target.files[0];\r\n                                                    \r\n                                                        reader.onloadend = () => {\r\n                                                            console.log('reader.result---',reader.result);\r\n                                                            \r\n                                                            setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                            setFieldValue(`profileImage`, file)\r\n                                                            // this.setState({\r\n                                                            // file: file,\r\n                                                            // imagePreviewUrl: reader.result\r\n                                                            // });\r\n                                                        }\r\n                                                    \r\n                                                        reader.readAsDataURL(file)\r\n\r\n\r\n                                                }} />\r\n                    \r\n                                            <img src={values.imageSavedUrl}  \r\n                                            style={{height:'150px', width:'150px', marginRight:'30px'}}\r\n                                            /> \r\n                                          \r\n                                            {\r\n                                                values.imagePreviewUrl && \r\n                                                \r\n                                                <img src={values.imagePreviewUrl}  name=\"imagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n                                                \r\n                                            } \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n                                        </Row>\r\n\r\n                                        <Row>\r\n\r\n                                        <Col lg={12}>\r\n                                                <FormGroup>\r\n                                                    <label><span style={{ color:'#605ca8'}}>Driving Information :</span></label>                                     \r\n                                                </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Company Information</label>\r\n                                            <Field name=\"companyInformation\" type=\"text\" className={'form-control' + (errors.companyInformation && touched.companyInformation ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"companyInformation\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Insuarance Number</label>\r\n                                            <Field name=\"insuaranceNumber\" type=\"text\" className={'form-control' + (errors.insuaranceNumber && touched.insuaranceNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"insuaranceNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>MC </label>\r\n                                            <Field name=\"mc\" type=\"text\" className={'form-control' + (errors.mc && touched.mc ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"mc\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>VIN </label>\r\n                                            <Field name=\"vin\" type=\"text\" className={'form-control' + (errors.vin && touched.vin ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"vin\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>DOT</label>\r\n                                            <Field name=\"dot\" type=\"text\" className={'form-control' + (errors.dot && touched.dot ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"dot\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Trip</label>\r\n                                            <Field name=\"trip\" type=\"text\" className={'form-control' + (errors.trip && touched.trip ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"trip\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Rating</label>\r\n                                            <Field name=\"rating\" type=\"text\" className={'form-control' + (errors.rating && touched.rating ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"rating\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                    </Row>\r\n\r\n                                       <Row>\r\n\r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Payment Information :</span></label>                                      \r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Holder Name</label>\r\n                                                \r\n                                            <Field name=\"accountHolderName\" type=\"text\" className={'form-control' + (errors.accountHolderName && touched.accountHolderName ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"accountHolderName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Number</label>\r\n                                            <Field name=\"accountNumber\" type=\"text\" className={'form-control' + (errors.accountNumber && touched.accountNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"accountNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>BankName</label>\r\n                                                \r\n                                            <Field name=\"bankName\" type=\"text\" className={'form-control' + (errors.bankName && touched.bankName ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"bankName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        </Row>\r\n\r\n\r\n                                        <Row>\r\n                                            \r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Booking Information :</span></label>                                      \r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Booking</label>\r\n                                       \r\n                                            <BookingDetail \r\n                                                name={\"bookingId\"} \r\n                                                bookingdetail={allBookingDetail}\r\n                                                value={values.bookingId} \r\n                                                onChange={setFieldValue}\r\n                                                onBlur={setFieldTouched}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                mode={\"edit\"} \r\n\r\n                                             />\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        </Row>\r\n\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                            </Col>\r\n                        \r\n                        </Row>\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR VIEW  START   */}\r\n\r\n            { pathEditView == 'view' && props.userList.success !== false && props.userList.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues}>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n                    console.log('values.status--',values.status);\r\n                    let dobDate =values.dob ?  new Date('2013-08-03T02:00:00Z') : ''\r\n                    if(dobDate !='')\r\n                    {\r\n\r\n                        let year    = dobDate.getFullYear();\r\n                        let month   = dobDate.getMonth()+1;\r\n                        let dt      = dobDate.getDate();\r\n    \r\n                        if (dt < 10) {\r\n                        dt = '0' + dt;\r\n                        }\r\n    \r\n                        if (month < 10) {\r\n                        month = '0' + month;\r\n                        }\r\n                        values.dob = year+'-' + month + '-'+dt\r\n    \r\n    \r\n                        console.log(year+'-' + month + '-'+dt);\r\n                    }\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>View Driver</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                                <div className=\"portlet box blue\">\r\n                                    <div className=\"portlet-title\">\r\n                                    <div className=\"caption\">\r\n                                        <i className=\"fa fa-user-plus\"></i>\r\n                                    </div>\r\n                                    <div className=\"tools\">\r\n                                        <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                        <div className=\"form-body\">\r\n                                            \r\n                                        <FormGroup row>\r\n                                        <Col md={12}>\r\n\r\n                                            <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                           \r\n                                        </Col>\r\n                                        </FormGroup>\r\n                                        \r\n                                        <Row>\r\n                                            <Col lg={12}>\r\n                                                <FormGroup>\r\n                                                    <label><span style={{ color:'#605ca8'}}>Basic Information :</span></label>\r\n                                                                                               \r\n                                                </FormGroup>\r\n                                            \r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                                <FormGroup>\r\n                                                    <label>First Name</label>\r\n                                                    <span name=\"firstName\"  className='form-control  no-border'>\r\n                                                        {values.firstName}\r\n                                                    </span>\r\n                                                                                               \r\n                                                </FormGroup>\r\n                                            \r\n                                            </Col>\r\n                                            \r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                    <label>Last Name</label>\r\n                                                    <span name=\"lastName\"  className='form-control  no-border'>\r\n                                                        {values.firstName}\r\n                                                    </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Email</label>\r\n                                                <span name=\"email\"  className='form-control  no-border'>\r\n                                                        {values.email}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Phone Number</label>\r\n                                                <span name=\"phoneNumber\"  className='form-control  no-border'>\r\n                                                        {values.phoneNumber}\r\n                                                </span>\r\n                                                \r\n                                    \r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            \r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Role</label>\r\n                                                <span name=\"role\"  className='form-control  no-border'>\r\n                                                        {values.role =='driver' ? 'Driver': values.role =='customer' ? 'Customer': ''}\r\n                                                </span>\r\n                                    \r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>DOB</label>\r\n                                                <span name=\"dob\"  className='form-control  no-border'>\r\n                                                        {values.dob}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Gender</label>\r\n                                                <span name=\"gender\"  className='form-control  no-border'>\r\n                                                        {values.gender}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Status</label>\r\n                                                    <span name=\"status\"  className='form-control  no-border'>\r\n                                                            {values.status === true? 'Active' : 'DeActive'}\r\n                                                    </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <FormGroup>\r\n                                            <label>Profile Image</label>\r\n                                            <div className=\"photo-upload\">                   \r\n                                            \r\n                                                    {\r\n                                                        values.imageSavedUrl && \r\n                                                        <img src={values.imageSavedUrl}  \r\n                                                        style={{height:'150px', width:'150px', marginRight:'30px'}}\r\n                                                        />                            \r\n                                                    }\r\n                                                    \r\n                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        </Row>\r\n                                        \r\n                                        <Row>\r\n                                        \r\n                                        \r\n                                        <Col lg={12}>\r\n                                                <FormGroup>\r\n                                                    <label><span style={{ color:'#605ca8'}}>Driving Information :</span></label>                                     \r\n                                                </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Company Information</label>\r\n                                            <span name=\"companyInformation\"  className='form-control  no-border'>\r\n                                                        {values.companyInformation}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Insuarance Number</label>\r\n                                            <span name=\"insuaranceNumber\"  className='form-control  no-border'>\r\n                                                        {values.insuaranceNumber}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>MC </label>\r\n                                            <span name=\"mc\"  className='form-control  no-border'>\r\n                                                        {values.mc}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>VIN </label>\r\n                                            <span name=\"vin\"  className='form-control  no-border'>\r\n                                                        {values.vin}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>DOT</label>\r\n                                            <span name=\"dot\"  className='form-control  no-border'>\r\n                                                        {values.dot}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Trip</label>\r\n                                            <span name=\"trip\"  className='form-control  no-border'>\r\n                                                        {values.trip}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Rating</label>\r\n                                            <span name=\"rating\"  className='form-control  no-border'>\r\n                                                        {values.rating}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                       </Row>\r\n                                       <Row>\r\n\r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Payment Information :</span></label>                                      \r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Holder Name</label>\r\n                                            <span name=\"accountHolderName\"  className='form-control  no-border'>\r\n                                                        {values.accountHolderName ? values.accountHolderName : 'N/A'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Number</label>\r\n                                            <span name=\"accountNumber\"  className='form-control  no-border'>\r\n                                                        {values.accountNumber ? values.accountNumber : 'N/A'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>BankName</label>\r\n                                            <span name=\"bankName\"  className='form-control  no-border'>\r\n                                                        {values.bankName ? values.bankName : 'N/A'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        </Row>\r\n                                        \r\n\r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n\r\n                                </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n            \r\n                    </Form>\r\n                    );\r\n                    }}\r\n                    </Formik>\r\n                }\r\n\r\n            {/*   THIS PART FOR VIEW  END   */}\r\n\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR ADD  START   */}\r\n\r\n            { isAddMode  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Driver' : 'Edit Driver'}</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-user-plus\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>First Name</label>\r\n                                                <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Last Name</label>\r\n                                                <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Email</label>\r\n                                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Phone Number</label>\r\n                                            <Field name=\"phoneNumber\" type=\"text\" className={'form-control' + (errors.phoneNumber && touched.phoneNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"phoneNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Role</label>\r\n                                            <Field name=\"role\" as=\"select\" className={'form-control' + (errors.role && touched.role ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"driver\">Driver</option>\r\n                                                        <option value=\"customer\">Customer</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"role\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>DOB</label>\r\n                                            <div>\r\n                                            <DatePicker\r\n                                                    selected={dob}\r\n                                                    onChange={(dt) => {\r\n                                                    // console.log('dt----',dt);\r\n                                                        setCounter(dt)\r\n                                                        setFieldValue(`dob`,new Date(dt))\r\n                                                    }}\r\n                                                    dateFormat = 'yyyy-MM-dd'\r\n                                                    isClearable\r\n                                                    showYearDropdown\r\n                                                    scrollableYearDropdown\r\n                                            />\r\n                                            </div>\r\n                                            <ErrorMessage name=\"dob\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Gender</label>\r\n                                            <Field name=\"gender\" as=\"select\" className={'form-control' + (errors.gender && touched.gender ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"Male\">Male</option>\r\n                                                        <option value=\"Female\">Female</option>\r\n                                                        <option value=\"Others\">Others</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n\r\n                                    <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                        // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                                        e.preventDefault();\r\n\r\n                                                        let reader = new FileReader();\r\n                                                        let file = e.target.files[0];\r\n                                                    \r\n                                                        reader.onloadend = () => {\r\n                                                            console.log('reader.result---',reader.result);\r\n                                                            \r\n                                                            setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                            setFieldValue(`profileImage`, file)\r\n                                                            // this.setState({\r\n                                                            // file: file,\r\n                                                            // imagePreviewUrl: reader.result\r\n                                                            // });\r\n                                                        }\r\n                                                    \r\n                                                        reader.readAsDataURL(file)\r\n\r\n\r\n                                                }} />\r\n\r\n                                                {\r\n                                                    values.imagePreviewUrl && \r\n                                                    \r\n                                                    <img src={values.imagePreviewUrl}  name=\"imagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n                                                    \r\n                                                } \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n\r\n                                    \r\n                                <Row>\r\n\r\n                                    <Col lg={4}>\r\n                                    <FormGroup>\r\n                                        <label>Status</label>\r\n                                       \r\n                                            <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                    <option value=\"true\">Active</option>\r\n                                                    <option value=\"false\">DeActive</option>\r\n                                            </Field>\r\n\r\n                                            <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                \r\n                                </Row>\r\n\r\n                                <Row>\r\n\r\n                                    <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Password</label>\r\n\r\n                                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                                        \r\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n\r\n                                     <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Confirm Password</label>\r\n                                       \r\n                                                <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\r\n                                            \r\n                                                <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n                    </Form>\r\n                    );\r\n                    }}\r\n                    </Formik>\r\n                }\r\n            {/*   THIS PART FOR ADD  END   */}\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR DELETE  START   */}\r\n\r\n            { pathEditView == 'delete' && props.userList.success !== false && props.userList.response.docs.length == 1  && \r\n        \r\n               <div className=\"modal show\" id=\"modal-form-delete\">\r\n                            <input type=\"hidden\" name=\"deleteId\" ></input>\r\n\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                    <Link to={'/driver'}>\r\n\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n                                    </Link>\r\n                                        <h4 className=\"modal-title\" id=\"myModalLabel\"></h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n\r\n                                            <div className=\"row\">\r\n                                                    <div className=\"col-sm-12\">\r\n                                                        <div className=\"form-group\" >\r\n                                                            <label >Are You Sure You want to delete ?</label>\r\n                                                        </div>\r\n                                \r\n                                                    </div>\r\n                                                </div>                        \r\n\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n\r\n                                                <Link to={'/driver'} className=\"btn btn-link\">\r\n\r\n                                                    <button type=\"button\" className=\"btn btn-default\" id=\"close-delete-button-model\"\r\n                                                        data-dismiss=\"modal\">Close</button>\r\n\r\n                                                </Link>\r\n                                            \r\n                                                    <button type=\"submit\" className=\"btn btn-primary\" onClick = { () => { onDeleteDriver(id) } }\r\n                                                >Delete</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div> \r\n            }\r\n\r\n            {/*   THIS PART FOR DELETE  START   */}\r\n\r\n        </Row>\r\n        </div>\r\n        \r\n        <Footer />\r\n    </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n        userList        : adminReducer.userList,\r\n        bookingList     : adminReducer.bookingList,\r\n        isSuccess       : adminReducer.isSuccess,\r\n        message         : adminReducer.message,\r\n        ismailsend      : adminReducer.ismailsend,\r\n        sendmailmessage : adminReducer.sendmailmessage,\r\n        isloading       : adminReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps, { postSendEmail, postAddUser, postEditUser, postDeleteUser, fetchUser, fetchBooking })(DriverForm)\r\n","import React from \"react\";\n\nexport default class Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) { return; }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) { return null; }\n\n    if (loading) { return <p>loading...</p>; }\n\n    return (<img src={thumb}\n      alt={file.name}\n      className=\"img-thumbnail mt-2\"\n      height={200}\n      width={200} />);\n  }\n}\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\n\r\nimport DriverForm from './DriverForm'\r\nimport { postDeleteUser } from '../../actions/admin'\r\n\r\nconst Driver = (props) => {\r\n\r\n    console.log('admin props --->',props.status);\r\n\r\n    return ( \r\n                    <tr >\r\n                        <td >\r\n                            <img style= {{ height: '50px', width: '50px'}} src={baseUrl+props.profileImage} />   \r\n                        </td>\r\n                        <td >{props.firstName}</td>  \r\n                        <td >{props.lastName}</td>  \r\n                        <td>{props.gender}</td>\r\n                        <td>{props.email}</td>\r\n                        <td>{props.role}</td>\r\n                        <td>{props.status === true ? 'Active':'DeActive'}</td>\r\n                        \r\n                         <td className=\"text-center\">\r\n                                <Link className=\"view\" title=\"View\" style={{marginRight:'5px'}} to= {{ pathname: `/driver/view/${props._id}` }}  >\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Edit\" style={{marginRight:'5px'}} to= {{ pathname: `/driver/edit/${props._id}` }}  >\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Delete\" to= {{ pathname: `/driver/delete/${props._id}` }}  >\r\n                                    <i className=\"fa fa-trash\" ></i>\r\n                                </Link>\r\n                        </td> \r\n                    </tr>\r\n               )\r\n    }\r\n    export default connect(null, { postDeleteUser })(Driver)\r\n\r\n//export default Driver","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { fetchUser } from '../../actions/admin'\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport Driver  from './Driver'\r\nimport { Loader } from 'react-overlay-loader';\r\n \r\nimport 'react-overlay-loader/styles.css';\r\nconst DriverList = props => {\r\n    console.log(props)\r\n    useEffect( ()=>(\r\n        props.fetchUser(undefined, undefined ,undefined,'','driver')\r\n    ), [])\r\n    let history = useHistory()\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchUser(undefined, pageNumber ,10,undefined, 'driver')\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchUser(undefined, undefined ,undefined,e.target.value,'driver')\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchUser(undefined, undefined ,undefined,'','driver')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Driver Management</h5>\r\n                                    <Link to= {{ pathname: `/driver/add` }}  >\r\n                                            <button title=\"Add new\" id=\"modal-add\" className=\"btn btn-primary pull-right\"\r\n                                            data-target=\"#modal-form-Edit\" data-toggle=\"modal\">\r\n                                            <i className=\"fa fa-plus\"></i> Add Driver</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n                                            <input id=\"searchinput\" placeholder=\"Search By Driver Name\" type=\"search\" onChange={ (e) => { handlePageSearch(e) } } className=\"form-control\" />\r\n                                            \r\n                                            <span id=\"searchclear\" className=\"glyphicon\" onClick={ ()=> {handleClear()}}>\r\n                                                <i className=\"fa fa-times\"></i>\r\n                                            </span>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>Profile Image</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>First Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Last Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Gender</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Email</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Role</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Status</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {(function() {\r\n                                                \r\n                                                     if (props.isloading) {\r\n                                                        return (\r\n                                                            <Loader fullPage loading />\r\n\r\n                                                        )\r\n                                                     }else \r\n                                                    if (props.userList.success !== false && props.userList.STATUSCODE !== 4000) {\r\n\r\n                                                        return props.userList.response.docs\r\n                                                        .map( userList => <Driver key={userList._id} {...userList}/> );\r\n\r\n                                                    } else if (props.userList.success === false && props.userList.STATUSCODE === 4000){\r\n                                                        if (props.login && props.login.success !== false)\r\n                                                        {\r\n                                                            return  history.push('/driver')\r\n\r\n                                                        }\r\n                                                        return  history.push('/login')\r\n                                                    }\r\n                                                    })\r\n                                             ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.userList.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.userList.response.page}\r\n                                            itemsCountPerPage={props.userList.response.limit}\r\n                                            totalItemsCount={props.userList.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer />\r\n   \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n\r\n    userList    : adminReducer.userList,\r\n    isSuccess   : adminReducer.isSuccess,\r\n    message     : adminReducer.message,\r\n    isloading   : adminReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchUser})(DriverList)","\r\nimport React, { Component, Fragment, useEffect, useState, useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage, FieldArray } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\nimport { postAddUser, fetchUser, postEditUser, postDeleteUser, postSendEmail } from '../../actions/admin'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\nimport NumericInput from 'react-numeric-input';\r\nimport 'react-overlay-loader/styles.css';\r\nimport Select from 'react-select';\r\nimport ReactDropzone from \"react-dropzone\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {usePrevious} from '../../shared/utils'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';  \r\nimport Thumb from './Thumb'\r\n\r\nconst CustomerForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   let textInput = useRef(null);\r\n   let [adminres, setAdminres] = useState(null);\r\n\r\n   function handleAdminResponse(e) {\r\n\r\n        console.log('e---',e.target.value);\r\n        setAdminres(e.target.value)\r\n\r\n   }\r\n\r\n   function validateEmail(email) {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n   function focusTextInput(adminresponse,email,fullname) {\r\n    // console.log('adminresponse---',adminresponse);\r\n    // console.log('email---',email);\r\n    // console.log('fullname---',fullname);\r\n\r\n        if(adminresponse == '')\r\n        {\r\n            toast.warn(`Please enter the  Admin response`)\r\n        }else  if(email == '')\r\n        {\r\n            toast.warn(`Please enter the Email`)\r\n        }else  if(!validateEmail(email))\r\n        {\r\n            toast.warn(`Please enter the valid Email`)\r\n        }else  if(fullname == '')\r\n        {\r\n            toast.warn(`Please enter the Full Name`)\r\n        }else{\r\n\r\n            props.postSendEmail(\r\n                {\r\n                    adminresponse:adminresponse,\r\n                    email:email,\r\n                    name:fullname\r\n                }   \r\n            )\r\n\r\n            toast.success(`Mail has been sent to ${fullname}`)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect( ()=>(\r\n        props.fetchUser(props.match.params.id)\r\n    ), [])\r\n    console.log('props values--->',props);\r\n\r\n    const { id }         = props.match.params;\r\n    let { path }         = props.match;\r\n    let pathEditView     = path.split('/')[2]\r\n    const isAddMode      = !id;\r\n    const prevIsSuccess  = usePrevious(props.isSuccess);    \r\n    const prevIsMailsend = usePrevious(props.ismailsend);    \r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted',props.isSuccess);\r\n\r\n        if(prevIsSuccess !== undefined && prevIsSuccess === false)\r\n        {\r\n            if(props.isSuccess === true)\r\n            {\r\n\r\n                toast.success(props.message)\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n            }else if(props.isSuccess === false){\r\n\r\n                toast.warn(props.message)\r\n\r\n            }\r\n        }\r\n\r\n    }, [prevIsSuccess, props.message])\r\n\r\n\r\n    let definedid                 = ''\r\n    let definedfirstName          = ''\r\n    let definedlastName           = ''\r\n    let definedemail              = ''\r\n    let definedphoneNumber        = ''\r\n    let definedlocation           = ''\r\n    let definedrole               = ''\r\n    let definedage                = ''\r\n    let definedcountry            = ''\r\n    let definedcity               = ''\r\n    let defineddob                = ''\r\n    let definedgender             = ''\r\n    let definedstatus             = ''\r\n    let defineddeleteId           = ''\r\n    let definedprofileImage       = ''\r\n    let definedimageSavedUrl      =''\r\n    let definedselfieImage        = ''\r\n    let definedselfieImageSavedUrl=''\r\n    let definedadminresponse      = ''\r\n\r\n    let definedcvcCode            = ''\r\n    let definedvalidity           = ''\r\n    let definedaccountHolderName  = ''\r\n    let definedaccountNumber      = ''\r\n    let definedpaymentMethod      = ''\r\n    let definedbankName           = ''\r\n    let definedccbill             = []\r\n\r\n\r\n    //deleteId\r\n    let [dob, setCounter]   = useState(null);\r\n    let [open, setOpen]     = useState(false);\r\n    \r\n\r\n    let [openProfile, setOpenProfile] = useState({\r\n        photoIndex: 0,\r\n        isOpenProfileImage: false,\r\n      });\r\n\r\n      let [openSelfie, setOpenSelfie] = useState({\r\n        selfieIndex: 0,\r\n        isOpenSelfie: false,\r\n      });\r\n      \r\n      \r\n    let profile        = []\r\n    let profileArray   = []\r\n    let selfieprofile  = []\r\n    if(!isAddMode && props.userList.response.docs.length == 1)\r\n    {\r\n        props.userList.response.docs.map((response) => \r\n        {\r\n            defineddeleteId          = pathEditView == 'delete' ? response._id: ''\r\n            definedid                = response._id\r\n            definedfirstName         = response.firstName\r\n            definedlastName          = response.lastName\r\n            definedemail             = response.email\r\n            definedphoneNumber       = response.phoneNumber\r\n            definedrole              = response.role\r\n            definedage               = response.age\r\n            definedgender            = response.gender\r\n            definedcountry           = response.country\r\n            definedcity              = response.city\r\n            defineddob               = response.dob\r\n            definedprofileImage      = response.profileImage\r\n\r\n            definedimageSavedUrl     = (response.profileImage != '') ?\r\n                                        baseUrl+response.profileImage : baseUrl+'uploads/dummy/demo-profile.png'\r\n            definedstatus            = response.status\r\n            definedccbill.push(response.ccbill)\r\n            if(response.ccbill !== null)\r\n            {   \r\n                definedccbill.map( (paymentData) => {\r\n\r\n                    definedcvcCode          = paymentData.cvcCode\r\n                    definedvalidity         = paymentData.validity\r\n                    definedaccountHolderName= paymentData.accountHolderName\r\n                    definedaccountNumber    = paymentData.accountNumber\r\n                    definedpaymentMethod    = paymentData.paymentMethod\r\n                    definedbankName         = paymentData.bankName\r\n                })\r\n            }\r\n       })\r\n\r\n    }\r\n    useEffect( ()=>{\r\n\r\n         if(defineddob && defineddob != '' )\r\n        {\r\n            setCounter(new Date(defineddob))\r\n        }\r\n\r\n    },[defineddob])\r\n\r\n \r\n    const closeLightbox = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n        addEditFields ={\r\n            deleteId                : defineddeleteId,\r\n            firstName                : definedfirstName,\r\n            lastName                : definedlastName,\r\n            email                   : definedemail,\r\n            phoneNumber             : definedphoneNumber,\r\n            location                : definedlocation,\r\n            role                    : definedrole,\r\n            age                     : definedage,\r\n            gender                  : definedgender,\r\n            country                 : definedcountry,\r\n            city                    : definedcity,\r\n            dob                     : defineddob,\r\n            profileImage            : definedprofileImage,\r\n            status                  : 'false',\r\n            password                : '',\r\n            imagePreviewUrl         : '',\r\n\r\n            cvcCode                 : definedcvcCode,\r\n            validity                : definedvalidity,\r\n            accountHolderName       : definedaccountHolderName,\r\n            accountNumber           : definedaccountNumber,\r\n            paymentMethod           : definedpaymentMethod,\r\n            bankName                : definedbankName\r\n\r\n        }\r\n\r\n        valdationShape= {\r\n            firstName: Yup.string()\r\n                .required('Full Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required'),\r\n            password: Yup.string()\r\n                .concat(isAddMode ? Yup.string().required('Password is required') : null)\r\n                .min(6, 'Password must be at least 6 characters'),\r\n            confirmPassword: Yup.string()\r\n                .when('password', (password, schema) => {\r\n                    if (password || isAddMode) return schema.required('Confirm Password is required');\r\n                })\r\n                .oneOf([Yup.ref('password')], 'Passwords must match')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId                : defineddeleteId,\r\n            userId                  : definedid,\r\n            firstName               : definedfirstName,\r\n            lastName                : definedlastName,\r\n            profileImage            : definedprofileImage,\r\n            imageSavedUrl           : definedimageSavedUrl,\r\n            email                   : definedemail,\r\n            phoneNumber             : definedphoneNumber,\r\n            location                : definedlocation,\r\n            role                    : definedrole,\r\n            age                     : definedage,\r\n            gender                  : definedgender,\r\n            country                 : definedcountry,\r\n            city                    : definedcity,\r\n            dob                     : defineddob,\r\n            status                  : definedstatus,\r\n            imagePreviewUrl         : '',\r\n\r\n            cvcCode                 : definedcvcCode,\r\n            validity                : definedvalidity,\r\n            accountHolderName       : definedaccountHolderName,\r\n            accountNumber           : definedaccountNumber,\r\n            paymentMethod           : definedpaymentMethod,\r\n            bankName                : definedbankName\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            firstName: Yup.string()\r\n                .required('Full Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n        \r\n\r\n       fields.ccbill = JSON.stringify({\r\n                                paymentMethod           : fields.paymentMethod,\r\n                                accountNumber           : fields.accountNumber,\r\n                                accountHolderName       : fields.accountHolderName,\r\n                                bankName                : fields.bankName,\r\n                                validity                : fields.validity,\r\n                                cvcCode                 : fields.cvcCode\r\n                         })\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n\r\n            props.postAddUser(fields)\r\n\r\n        } else {\r\n\r\n            props.postEditUser(fields)\r\n        }\r\n\r\n    }\r\n\r\n    function onDeleteCustomer(id){\r\n        console.log('id---',id);\r\n        props.postDeleteUser({userId:id})\r\n        toast.success(\"Customer Data Deleted Successfully.\")\r\n\r\n        setTimeout( ()=>{\r\n\r\n            document.getElementById('close-delete-button-model').click() ;\r\n\r\n        },2500)\r\n\r\n    }\r\n    const setCount = date => {\r\n\r\n       console.log('setCount date---',setCount);\r\n        setCounter(date);\r\n\r\n    };\r\n\r\n   const { photoIndex, isOpenProfileImage } = openProfile;\r\n   const { selfieIndex, isOpenSelfie }      = openSelfie;\r\n\r\n   const roundButtonStyle = {\r\n    borderRadius: '50%'\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"wrapper\">\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n            {props.isloading &&\r\n\r\n                           <Loader fullPage loading />\r\n\r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n            { pathEditView == 'edit' && props.userList.success !== false && props.userList.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue,handleChange }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Customer' : 'Edit Customer'}</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-user-plus\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        \r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Basic Information :</span></label>\r\n                                                                                            \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>First Name</label>\r\n                                                <Field name=\"firstName\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Last Name</label>\r\n                                                <Field name=\"lastName\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Email</label>\r\n                                            <Field name=\"email\"  type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Phone Number</label>\r\n                                            <Field name=\"phoneNumber\" type=\"text\" className={'form-control' + (errors.phoneNumber && touched.phoneNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"phoneNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                     \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Role</label>\r\n                                            <Field name=\"role\" as=\"select\" className={'form-control' + (errors.role && touched.role ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"driver\">Customer</option>\r\n                                                        <option value=\"customer\">Customer</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"role\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>DOB</label>\r\n                                            <div>\r\n                                            <DatePicker\r\n                                                    selected={dob}\r\n                                                    onChange={(dt) => {\r\n                                                    // console.log('dt----',dt);\r\n                                                        setCounter(dt)\r\n                                                        setFieldValue(`dob`,new Date(dt))\r\n                                                    }}\r\n                                                    dateFormat = 'yyyy-MM-dd'\r\n                                                    isClearable\r\n                                                    showYearDropdown\r\n                                                    scrollableYearDropdown\r\n                                            />\r\n                                            </div>\r\n                                            <ErrorMessage name=\"dob\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Gender</label>\r\n                                            <Field name=\"gender\" as=\"select\" className={'form-control' + (errors.gender && touched.gender ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"Male\">Male</option>\r\n                                                        <option value=\"Female\">Female</option>\r\n                                                        <option value=\"Others\">Others</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Status</label>\r\n                                        \r\n                                                <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                        <option value=\"true\">Active</option>\r\n                                                        <option value=\"false\">DeActive</option>\r\n                                                </Field>\r\n\r\n                                                <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                        // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                                        e.preventDefault();\r\n\r\n                                                        let reader = new FileReader();\r\n                                                        let file = e.target.files[0];\r\n                                                    \r\n                                                        reader.onloadend = () => {\r\n                                                            console.log('reader.result---',reader.result);\r\n                                                            \r\n                                                            setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                            setFieldValue(`profileImage`, file)\r\n                                                            // this.setState({\r\n                                                            // file: file,\r\n                                                            // imagePreviewUrl: reader.result\r\n                                                            // });\r\n                                                        }\r\n                                                    \r\n                                                        reader.readAsDataURL(file)\r\n\r\n\r\n                                                }} />\r\n                    \r\n                                            <img src={values.imageSavedUrl}  \r\n                                            style={{height:'150px', width:'150px', marginRight:'30px'}}\r\n                                            /> \r\n                                          \r\n                                            {\r\n                                                values.imagePreviewUrl && \r\n                                                \r\n                                                <img src={values.imagePreviewUrl}  name=\"imagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n                                                \r\n                                            } \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n                                        </Row>\r\n\r\n                                       <Row>\r\n\r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Payment Information :</span></label>                                      \r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Holder Name</label>\r\n                                                \r\n                                            <Field name=\"accountHolderName\" type=\"text\" className={'form-control' + (errors.accountHolderName && touched.accountHolderName ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"accountHolderName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Number</label>\r\n                                            <Field name=\"accountNumber\" type=\"text\" className={'form-control' + (errors.accountNumber && touched.accountNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"accountNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>BankName</label>\r\n                                                \r\n                                            <Field name=\"bankName\" type=\"text\" className={'form-control' + (errors.bankName && touched.bankName ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"bankName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Payment Method</label>\r\n                                                \r\n                                            <Field name=\"paymentMethod\" type=\"text\" className={'form-control' + (errors.paymentMethod && touched.paymentMethod ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"paymentMethod\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Validity</label>\r\n                                                \r\n                                            <Field name=\"validity\" type=\"text\" className={'form-control' + (errors.validity && touched.validity ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"validity\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Cvc Code</label>\r\n                                                \r\n                                            <Field name=\"cvcCode\" type=\"text\" className={'form-control' + (errors.cvcCode && touched.cvcCode ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"cvcCode\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        </Row>\r\n\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                            </Col>\r\n                        \r\n                        </Row>\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR VIEW  START   */}\r\n\r\n            { pathEditView == 'view' && props.userList.success !== false && props.userList.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues}>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n                    console.log('values.status--',values.status);\r\n                    let dobDate =values.dob ?  new Date('2013-08-03T02:00:00Z') : ''\r\n                    if(dobDate !='')\r\n                    {\r\n\r\n                        let year    = dobDate.getFullYear();\r\n                        let month   = dobDate.getMonth()+1;\r\n                        let dt      = dobDate.getDate();\r\n    \r\n                        if (dt < 10) {\r\n                        dt = '0' + dt;\r\n                        }\r\n    \r\n                        if (month < 10) {\r\n                        month = '0' + month;\r\n                        }\r\n                        values.dob = year+'-' + month + '-'+dt\r\n    \r\n    \r\n                        console.log(year+'-' + month + '-'+dt);\r\n                    }\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>View Customer</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                                <div className=\"portlet box blue\">\r\n                                    <div className=\"portlet-title\">\r\n                                    <div className=\"caption\">\r\n                                        <i className=\"fa fa-user-plus\"></i>\r\n                                    </div>\r\n                                    <div className=\"tools\">\r\n                                        <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                        <div className=\"form-body\">\r\n                                            \r\n                                        <FormGroup row>\r\n                                        <Col md={12}>\r\n\r\n                                            <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                           \r\n                                        </Col>\r\n                                        </FormGroup>\r\n                                        \r\n                                        <Row>\r\n                                            <Col lg={12}>\r\n                                                <FormGroup>\r\n                                                    <label><span style={{ color:'#605ca8'}}>Basic Information :</span></label>\r\n                                                                                               \r\n                                                </FormGroup>\r\n                                            \r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                                <FormGroup>\r\n                                                    <label>First Name</label>\r\n                                                    <span name=\"firstName\"  className='form-control  no-border'>\r\n                                                        {values.firstName}\r\n                                                    </span>\r\n                                                                                               \r\n                                                </FormGroup>\r\n                                            \r\n                                            </Col>\r\n                                            \r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                    <label>Last Name</label>\r\n                                                    <span name=\"lastName\"  className='form-control  no-border'>\r\n                                                        {values.firstName}\r\n                                                    </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Email</label>\r\n                                                <span name=\"email\"  className='form-control  no-border'>\r\n                                                        {values.email}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Phone Number</label>\r\n                                                <span name=\"phoneNumber\"  className='form-control  no-border'>\r\n                                                        {values.phoneNumber}\r\n                                                </span>\r\n                                                \r\n                                    \r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            \r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Role</label>\r\n                                                <span name=\"role\"  className='form-control  no-border'>\r\n                                                        {values.role =='driver' ? 'Customer': values.role =='customer' ? 'Customer': ''}\r\n                                                </span>\r\n                                    \r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>DOB</label>\r\n                                                <span name=\"dob\"  className='form-control  no-border'>\r\n                                                        {values.dob}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Gender</label>\r\n                                                <span name=\"gender\"  className='form-control  no-border'>\r\n                                                        {values.gender}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Status</label>\r\n                                                    <span name=\"status\"  className='form-control  no-border'>\r\n                                                            {values.status === true? 'Active' : 'DeActive'}\r\n                                                    </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <FormGroup>\r\n                                            <label>Profile Image</label>\r\n                                            <div className=\"photo-upload\">                   \r\n                                            \r\n                                                    {\r\n                                                        values.imageSavedUrl && \r\n                                                        <img src={values.imageSavedUrl}  \r\n                                                        style={{height:'150px', width:'150px', marginRight:'30px'}}\r\n                                                        />                            \r\n                                                    }\r\n                                                    \r\n                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        </Row>\r\n                                        \r\n                                        <Row>\r\n\r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Payment Information :</span></label>                                      \r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Holder Name</label>\r\n                                            <span name=\"accountHolderName\"  className='form-control  no-border'>\r\n                                                        {values.accountHolderName ? values.accountHolderName : 'N/A'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Number</label>\r\n                                            <span name=\"accountNumber\"  className='form-control  no-border'>\r\n                                                        {values.accountNumber ? values.accountNumber : 'N/A'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>BankName</label>\r\n                                            <span name=\"bankName\"  className='form-control  no-border'>\r\n                                                        {values.bankName ? values.bankName : 'N/A'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Payment Method</label>\r\n                                                \r\n                                            <span name=\"paymentMethod\"  className='form-control  no-border'>\r\n                                                        {values.paymentMethod ? values.paymentMethod : 'N/A'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Validity</label>\r\n                                                \r\n                                            <span name=\"validity\"  className='form-control  no-border'>\r\n                                                        {values.validity ? values.validity : 'N/A'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Cvc Code</label>\r\n                                                \r\n                                            <span name=\"cvcCode\"  className='form-control  no-border'>\r\n                                                        {values.cvcCode ? values.cvcCode : 'N/A'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        </Row>\r\n\r\n\r\n\r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n\r\n                                </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n            \r\n                    </Form>\r\n                    );\r\n                    }}\r\n                    </Formik>\r\n                }\r\n\r\n            {/*   THIS PART FOR VIEW  END   */}\r\n\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR ADD  START   */}\r\n\r\n            { isAddMode  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Customer' : 'Edit Customer'}</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-user-plus\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        \r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Basic Information :</span></label>\r\n                                                                                            \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>First Name</label>\r\n                                                <Field name=\"firstName\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Last Name</label>\r\n                                                <Field name=\"lastName\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Email</label>\r\n                                            <Field name=\"email\"  type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Phone Number</label>\r\n                                            <Field name=\"phoneNumber\" type=\"text\" className={'form-control' + (errors.phoneNumber && touched.phoneNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"phoneNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                     \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Role</label>\r\n                                            <Field name=\"role\" as=\"select\" className={'form-control' + (errors.role && touched.role ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"driver\">Customer</option>\r\n                                                        <option value=\"customer\">Customer</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"role\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>DOB</label>\r\n                                            <div>\r\n                                            <DatePicker\r\n                                                    selected={dob}\r\n                                                    onChange={(dt) => {\r\n                                                    // console.log('dt----',dt);\r\n                                                        setCounter(dt)\r\n                                                        setFieldValue(`dob`,new Date(dt))\r\n                                                    }}\r\n                                                    dateFormat = 'yyyy-MM-dd'\r\n                                                    isClearable\r\n                                                    showYearDropdown\r\n                                                    scrollableYearDropdown\r\n                                            />\r\n                                            </div>\r\n                                            <ErrorMessage name=\"dob\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Gender</label>\r\n                                            <Field name=\"gender\" as=\"select\" className={'form-control' + (errors.gender && touched.gender ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"Male\">Male</option>\r\n                                                        <option value=\"Female\">Female</option>\r\n                                                        <option value=\"Others\">Others</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Status</label>\r\n                                        \r\n                                                <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                        <option value=\"true\">Active</option>\r\n                                                        <option value=\"false\">DeActive</option>\r\n                                                </Field>\r\n\r\n                                                <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                        // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                                        e.preventDefault();\r\n\r\n                                                        let reader = new FileReader();\r\n                                                        let file = e.target.files[0];\r\n                                                    \r\n                                                        reader.onloadend = () => {\r\n                                                            console.log('reader.result---',reader.result);\r\n                                                            \r\n                                                            setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                            setFieldValue(`profileImage`, file)\r\n                                                            // this.setState({\r\n                                                            // file: file,\r\n                                                            // imagePreviewUrl: reader.result\r\n                                                            // });\r\n                                                        }\r\n                                                    \r\n                                                        reader.readAsDataURL(file)\r\n\r\n\r\n                                                }} />\r\n                    \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n                                        </Row>\r\n\r\n                                       <Row>\r\n\r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Payment Information :</span></label>                                      \r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Holder Name</label>\r\n                                                \r\n                                            <Field name=\"accountHolderName\" type=\"text\" className={'form-control' + (errors.accountHolderName && touched.accountHolderName ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"accountHolderName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Account Number</label>\r\n                                            <Field name=\"accountNumber\" type=\"text\" className={'form-control' + (errors.accountNumber && touched.accountNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"accountNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>BankName</label>\r\n                                                \r\n                                            <Field name=\"bankName\" type=\"text\" className={'form-control' + (errors.bankName && touched.bankName ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"bankName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Payment Method</label>\r\n                                                \r\n                                            <Field name=\"paymentMethod\" type=\"text\" className={'form-control' + (errors.paymentMethod && touched.paymentMethod ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"paymentMethod\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Validity</label>\r\n                                                \r\n                                            <Field name=\"validity\" type=\"text\" className={'form-control' + (errors.validity && touched.validity ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"validity\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Cvc Code</label>\r\n                                                \r\n                                            <Field name=\"cvcCode\" type=\"text\" className={'form-control' + (errors.cvcCode && touched.cvcCode ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"cvcCode\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        </Row>\r\n                                <Row>\r\n\r\n                                    <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Password Information :</span></label>                                      \r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Password</label>\r\n\r\n                                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                                        \r\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n\r\n                                     <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Confirm Password</label>\r\n                                       \r\n                                                <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\r\n                                            \r\n                                                <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n                    </Form>\r\n                    );\r\n                    }}\r\n                    </Formik>\r\n                }\r\n            {/*   THIS PART FOR ADD  END   */}\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR DELETE  START   */}\r\n\r\n            { pathEditView == 'delete' && props.userList.success !== false && props.userList.response.docs.length == 1  && \r\n        \r\n               <div className=\"modal show\" id=\"modal-form-delete\">\r\n                            <input type=\"hidden\" name=\"deleteId\" ></input>\r\n\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                    <Link to={'/driver'}>\r\n\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n                                    </Link>\r\n                                        <h4 className=\"modal-title\" id=\"myModalLabel\"></h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n\r\n                                            <div className=\"row\">\r\n                                                    <div className=\"col-sm-12\">\r\n                                                        <div className=\"form-group\" >\r\n                                                            <label >Are You Sure You want to delete ?</label>\r\n                                                        </div>\r\n                                \r\n                                                    </div>\r\n                                                </div>                        \r\n\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n\r\n                                                <Link to={'/driver'} className=\"btn btn-link\">\r\n\r\n                                                    <button type=\"button\" className=\"btn btn-default\" id=\"close-delete-button-model\"\r\n                                                        data-dismiss=\"modal\">Close</button>\r\n\r\n                                                </Link>\r\n                                            \r\n                                                    <button type=\"submit\" className=\"btn btn-primary\" onClick = { () => { onDeleteCustomer(id) } }\r\n                                                >Delete</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div> \r\n            }\r\n\r\n            {/*   THIS PART FOR DELETE  START   */}\r\n\r\n        </Row>\r\n        </div>\r\n        \r\n        <Footer />\r\n    </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n    userList    : adminReducer.userList,\r\n    isSuccess   : adminReducer.isSuccess,\r\n    message     : adminReducer.message,\r\n    ismailsend  : adminReducer.ismailsend,\r\n    sendmailmessage  : adminReducer.sendmailmessage,\r\n    isloading   : adminReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps, { postSendEmail, postAddUser, postEditUser, postDeleteUser, fetchUser })(CustomerForm)\r\n","import React from \"react\";\n\nexport default class Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) { return; }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) { return null; }\n\n    if (loading) { return <p>loading...</p>; }\n\n    return (<img src={thumb}\n      alt={file.name}\n      className=\"img-thumbnail mt-2\"\n      height={200}\n      width={200} />);\n  }\n}\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\n\r\nimport CustomerForm from './CustomerForm'\r\nimport { postDeleteUser } from '../../actions/admin'\r\n\r\nconst Customer = (props) => {\r\n\r\n    console.log('admin props --->',props.status);\r\n\r\n    return ( \r\n                    <tr >\r\n                        <td >\r\n                            <img style= {{ height: '50px', width: '50px'}} src={baseUrl+props.profileImage} />   \r\n                        </td>\r\n                        <td >{props.firstName}</td>  \r\n                        <td >{props.lastName}</td>  \r\n                        <td>{props.gender}</td>\r\n                        <td>{props.email}</td>\r\n                        <td>{props.role}</td>\r\n                        <td>{props.status === true ? 'Active':'DeActive'}</td>\r\n                        \r\n                         <td className=\"text-center\">\r\n                                <Link className=\"view\" title=\"View\" style={{marginRight:'5px'}} to= {{ pathname: `/customer/view/${props._id}` }}  >\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Edit\" style={{marginRight:'5px'}} to= {{ pathname: `/customer/edit/${props._id}` }}  >\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Delete\" to= {{ pathname: `/customer/delete/${props._id}` }}  >\r\n                                    <i className=\"fa fa-trash\" ></i>\r\n                                </Link>\r\n                        </td> \r\n                    </tr>\r\n               )\r\n    }\r\n    export default connect(null, { postDeleteUser })(Customer)\r\n\r\n//export default Customer","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { fetchUser } from '../../actions/admin'\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport Customer  from './Customer'\r\nimport { Loader } from 'react-overlay-loader';\r\n \r\nimport 'react-overlay-loader/styles.css';\r\nconst CustomerList = props => {\r\n    console.log(props)\r\n    useEffect( ()=>(\r\n        props.fetchUser(undefined, undefined ,undefined,'','customer')\r\n    ), [])\r\n    let history = useHistory()\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchUser(undefined, pageNumber ,10, undefined, 'customer')\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchUser(undefined, undefined ,undefined,e.target.value,'customer')\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchUser(undefined, undefined ,undefined,'','customer')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Customer Management</h5>\r\n                                    <Link to= {{ pathname: `/customer/add` }}  >\r\n                                            <button title=\"Add new\" id=\"modal-add\" className=\"btn btn-primary pull-right\"\r\n                                            data-target=\"#modal-form-Edit\" data-toggle=\"modal\">\r\n                                            <i className=\"fa fa-plus\"></i> Add Customer</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n                                            <input id=\"searchinput\" placeholder=\"Search By Customer Name\" type=\"search\" onChange={ (e) => { handlePageSearch(e) } } className=\"form-control\" />\r\n                                            \r\n                                            <span id=\"searchclear\" className=\"glyphicon\" onClick={ ()=> {handleClear()}}>\r\n                                                <i className=\"fa fa-times\"></i>\r\n                                            </span>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>Profile Image</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>First Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Last Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Gender</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Email</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Role</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Status</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {(function() {\r\n                                                \r\n                                                     if (props.isloading) {\r\n                                                        return (\r\n                                                            <Loader fullPage loading />\r\n\r\n                                                        )\r\n                                                     }else \r\n                                                    if (props.userList.success !== false && props.userList.STATUSCODE !== 4000) {\r\n\r\n                                                        return props.userList.response.docs\r\n                                                        .map( userList => <Customer key={userList._id} {...userList}/> );\r\n\r\n                                                    } else if (props.userList.success === false && props.userList.STATUSCODE === 4000){\r\n                                                        if (props.login && props.login.success !== false)\r\n                                                        {\r\n                                                            return  history.push('/customer')\r\n\r\n                                                        }\r\n                                                        return  history.push('/login')\r\n                                                    }\r\n                                                    })\r\n                                             ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.userList.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.userList.response.page}\r\n                                            itemsCountPerPage={props.userList.response.limit}\r\n                                            totalItemsCount={props.userList.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer />\r\n   \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n\r\n    userList    : adminReducer.userList,\r\n    isSuccess   : adminReducer.isSuccess,\r\n    message     : adminReducer.message,\r\n    isloading:adminReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchUser})(CustomerList)","import axios from 'axios'\r\nimport { type } from 'os';\r\nimport { baseUrl, localUrl } from '../shared/baseUrl'\r\nimport { getToken } from './admin'\r\n\r\n\r\nexport const FETCH_TERM_LIST_START = 'FETCH_TERM_LIST_START'\r\nexport const FETCH_TERM_LIST_SUCCESS = 'FETCH_TERM_LIST_SUCCESS'\r\nexport const FETCH_TERM_LIST_FAILURE = 'FETCH_TERM_LIST_FAILURE'\r\n\r\nexport const POST_TERM_ADD_START = 'POST_TERM_ADD_START'\r\nexport const POST_TERM_ADD_SUCCESS = 'POST_TERM_ADD_SUCCESS'\r\nexport const POST_TERM_ADD_FAILURE = 'POST_TERM_ADD_FAILURE'\r\n\r\nexport const POST_TERM_EDIT_START = 'POST_TERM_EDIT_START'\r\nexport const POST_TERM_EDIT_SUCCESS = 'POST_TERM_EDIT_SUCCESS'\r\nexport const POST_TERM_EDIT_FAILURE = 'POST_TERM_EDIT_FAILURE'\r\n\r\nexport const POST_TERM_DELETE_START = 'POST_TERM_DELETE_START'\r\nexport const POST_TERM_DELETE_SUCCESS = 'POST_TERM_DELETE_SUCCESS'\r\nexport const POST_TERM_DELETE_FAILURE = 'POST_TERM_DELETE_FAILURE'\r\n\r\n\r\n\r\n//...................TERM ...............................\r\n\r\n    export const postEditTerm = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_TERM_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n    }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n    formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'api/editTerms/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_TERM_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_TERM_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n    }\r\n\r\n    export const fetchTerm = (id,page,limit,searchName) => {\r\n\r\n    let token = JSON.parse(getToken()).token\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n        }\r\n    return (dispatch) => {\r\n        dispatch(fetchTermRequest())\r\n\r\n        axios\r\n        .get(baseUrl+'api/listTerms/', {\r\n            headers: headers,\r\n            params:{\r\n                ...(id ? { termId: id } : {}),\r\n                ...(searchName ? { searchName: searchName } : {}),\r\n                ...(page ? { page: page } : {}),\r\n                ...(limit ? { limit: limit } : {})\r\n            }\r\n            })\r\n        .then(res =>{\r\n            console.log(res)\r\n            dispatch(fetchTermSuccess(res.data))\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            dispatch(fetchTermFailure(err.message))\r\n        })\r\n    }\r\n    }\r\n\r\n    export const fetchTermRequest = () => {\r\n    return {\r\n        type: FETCH_TERM_LIST_START\r\n    }\r\n    }\r\n\r\n    export const fetchTermSuccess = users => {\r\n    return {\r\n        type: FETCH_TERM_LIST_SUCCESS,\r\n        payload: users\r\n    }\r\n    }\r\n\r\n    export const fetchTermFailure = err => {\r\n    return {\r\n        type: FETCH_TERM_LIST_FAILURE,\r\n        payload: err\r\n    }\r\n    }\r\n\r\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nconst Term = (props) => {\r\n\r\n    console.log('admin props --->',props);\r\n\r\n    return ( \r\n                <Fragment>\r\n                    <tr >\r\n                        <td >1.</td>  \r\n                        <td dangerouslySetInnerHTML={{__html: props.description}} />                     \r\n                        <td>\r\n                          \r\n\r\n                                <Link to= {{ pathname: `/term/edit/${props._id}` }}  >\r\n\r\n                                    <button type=\"button\"   className=\"btn btn-primary\" id=\"modalprintedit\"\r\n                                    data-toggle=\"modal\" style={{'marginRight':'10px'}} data-target=\"#modal-form-Edit\"\r\n                                    title=\"Edit\">\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                    </button>\r\n                                </Link>\r\n\r\n                               \r\n                        </td>\r\n                    </tr>\r\n   \r\n                </Fragment>                 \r\n            )\r\n    }\r\n    export default connect(null, { })(Term)\r\n\r\n//export default Term","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { fetchTerm } from '../../actions/terms'\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport Term  from './Term'\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nconst TermList = props => {\r\n    console.log(props)\r\n    useEffect( ()=>(\r\n        props.fetchTerm()\r\n    ), [])\r\n    let history = useHistory()\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchTerm(undefined, pageNumber ,3)\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchTerm(undefined, undefined ,undefined,e.target.value)\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchTerm(undefined, undefined ,undefined,'')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Term Management</h5>\r\n                                   \r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>SNo.</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Description</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {(function() {\r\n                                                \r\n                                                     if (props.isloading) {\r\n                                                        return (\r\n                                                            <Loader fullPage loading />\r\n\r\n                                                        )\r\n                                                     }else \r\n                                                    if (props.termlist.success !== false && props.termlist.STATUSCODE !== 4000) {\r\n\r\n                                                        return props.termlist.response.docs\r\n                                                        .map( termlist => <Term key={termlist._id} {...termlist}/> );\r\n\r\n                                                    } else if (props.termlist.success === false && props.termlist.STATUSCODE === 4000){\r\n                                                        if (props.login && props.login.success !== false)\r\n                                                        {\r\n                                                            return  history.push('/term')\r\n\r\n                                                        }\r\n                                                        return  history.push('/login')\r\n                                                    }\r\n                                                    })\r\n                                             ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.termlist.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.termlist.response.page}\r\n                                            itemsCountPerPage={props.termlist.response.limit}\r\n                                            totalItemsCount={props.termlist.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer />\r\n   \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({termReducer}) => ({\r\n\r\n    termlist:termReducer.termlist,\r\n    isloading:termReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchTerm})(TermList)","\r\nimport React, { Component, Fragment, useEffect, useState,useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {  fetchTerm, postEditTerm } from '../../actions/terms'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nimport './TermForm.css';\r\n\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n    return ref.current;\r\n  }\r\n\r\nconst TermForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n   console.log('lastIndex----',lastIndex);\r\n   \r\n   var id = window.location.href.substring(lastIndex + 1); //after this id=\"true\"\r\n   console.log('path----',id);\r\n\r\n    useEffect( ()=>(\r\n        props.fetchTerm(id)\r\n    ), [])\r\n    console.log('props values--->',props);\r\n\r\n    var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n    console.log('lastIndex----',lastIndex);\r\n\r\n    let pathEditView = window.location.href.split('/')[ window.location.href.split('/').length -2]\r\n    console.log('pathEditView--------->',pathEditView);\r\n\r\n    const isAddMode = id=='add' ? true:false;\r\n\r\n    const prevIsSuccess = usePrevious(props.isSuccess);    \r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted',props.isSuccess);\r\n\r\n        if(prevIsSuccess === false && props.isSuccess === true)\r\n        {\r\n   \r\n                toast.success(\"Term Updated Successfully.\")\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n           \r\n        }\r\n\r\n    }, [props.isSuccess,prevIsSuccess])\r\n\r\n\r\n\r\n    let definedid = ''\r\n    let defineddescription = ''\r\n    let defineddeleteId = ''\r\n    //deleteId\r\n    if(props.termlist.response.docs.length == 1)\r\n    {\r\n        defineddeleteId = pathEditView == 'delete' ? props.termlist.response.docs[0]._id: ''\r\n        definedid = props.termlist.response.docs[0]._id\r\n\r\n        defineddescription = props.termlist.response.docs[0].description\r\n\r\n    }\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            termId: definedid,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n\r\n            props.postAddTerm(fields)\r\n\r\n        } else {\r\n\r\n            props.postEditTerm(fields)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n            {props.isloading &&\r\n\r\n                <Loader fullPage loading />\r\n\r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n            { pathEditView == 'edit' && props.termlist.success !== false && props.termlist.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Term' : 'Edit Term'}</h1>\r\n                        \r\n\r\n                        <FormGroup row>\r\n                        <Label for=\"description\" md={3}>Description</Label>\r\n                        <Col md={9}>\r\n\r\n                            <CKEditor\r\n                                editor={ ClassicEditor }\r\n                                data={values.description}\r\n                                disabled={false}\r\n                                onInit={ editor => {\r\n                                    // You can store the \"editor\" and use when it is needed.\r\n                                    console.log( 'Editor is ready to use!', editor );\r\n                                } }\r\n                                onChange={ ( event, editor ) => {\r\n                                    const data = editor.getData();\r\n                                    setFieldValue(`description`, data)\r\n                                    console.log( { event, editor, data } );\r\n                                } }\r\n                                onBlur={ ( event, editor ) => {\r\n                                    console.log( 'Blur.', editor );\r\n                                } }\r\n                                onFocus={ ( event, editor ) => {\r\n                                    console.log( 'Focus.', editor );\r\n                                } }\r\n                            />\r\n\r\n                            <ErrorMessage name=\"description\" component=\"div\" className=\"invalid-feedback\" />\r\n                        \r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                        <Col md={9}>\r\n\r\n                            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\r\n                                {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                Save\r\n                            </button>\r\n                            <Link to={isAddMode ? '.' : '..'} className=\"btn btn-link\">Cancel</Link>\r\n\r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n        </Row>\r\n        </div>\r\n        <Footer />\r\n    </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({termReducer}) => ({\r\n    termlist:termReducer.termlist,\r\n    isSuccess:termReducer.isSuccess,\r\n    isloading:termReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps, {postEditTerm, fetchTerm })(TermForm)\r\n","import axios from 'axios'\r\nimport { type } from 'os';\r\nimport { baseUrl, localUrl } from '../shared/baseUrl'\r\nimport { getToken } from './admin'\r\n\r\n\r\nexport const FETCH_PRIVACY_LIST_START = 'FETCH_PRIVACY_LIST_START'\r\nexport const FETCH_PRIVACY_LIST_SUCCESS = 'FETCH_PRIVACY_LIST_SUCCESS'\r\nexport const FETCH_PRIVACY_LIST_FAILURE = 'FETCH_PRIVACY_LIST_FAILURE'\r\n\r\nexport const POST_PRIVACY_ADD_START = 'POST_PRIVACY_ADD_START'\r\nexport const POST_PRIVACY_ADD_SUCCESS = 'POST_PRIVACY_ADD_SUCCESS'\r\nexport const POST_PRIVACY_ADD_FAILURE = 'POST_PRIVACY_ADD_FAILURE'\r\n\r\nexport const POST_PRIVACY_EDIT_START = 'POST_PRIVACY_EDIT_START'\r\nexport const POST_PRIVACY_EDIT_SUCCESS = 'POST_PRIVACY_EDIT_SUCCESS'\r\nexport const POST_PRIVACY_EDIT_FAILURE = 'POST_PRIVACY_EDIT_FAILURE'\r\n\r\nexport const POST_PRIVACY_DELETE_START = 'POST_PRIVACY_DELETE_START'\r\nexport const POST_PRIVACY_DELETE_SUCCESS = 'POST_PRIVACY_DELETE_SUCCESS'\r\nexport const POST_PRIVACY_DELETE_FAILURE = 'POST_PRIVACY_DELETE_FAILURE'\r\n\r\n\r\n\r\n//...................PRIVACY ...............................\r\nexport const fetchPrivacy = (id,page,limit,searchName) => dispatch =>{\r\n\r\n    console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    dispatch( {type:'FETCH_PRIVACY_LIST_START'} )\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n      \r\n    axios\r\n    .get(baseUrl+'api/listPrivacyPolicy/', {\r\n        headers: headers,\r\n        params:{\r\n            ...(id ? { privacyId: id } : {}),\r\n            ...(searchName ? { searchName: searchName } : {}),\r\n            ...(page ? { page: page } : {}),\r\n            ...(limit ? { limit: limit } : {})\r\n        }\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'FETCH_PRIVACY_LIST_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'FETCH_PRIVACY_LIST_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\n\r\nexport const postEditPrivacy = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_PRIVACY_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n      formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'api/editPrivacyPolicy/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_PRIVACY_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_PRIVACY_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nconst Privacy = (props) => {\r\n\r\n    console.log('admin props --->',props);\r\n\r\n    return ( \r\n                <Fragment>\r\n                    <tr >\r\n                        <td >1.</td>  \r\n                        <td dangerouslySetInnerHTML={{__html: props.description}} />  \r\n                        <td>\r\n                                <Link to= {{ pathname: `/privacy/edit/${props._id}` }}  >\r\n\r\n                                    <button type=\"button\"   className=\"btn btn-primary\" id=\"modalprintedit\"\r\n                                    data-toggle=\"modal\" style={{'marginRight':'10px'}} data-target=\"#modal-form-Edit\"\r\n                                    title=\"Edit\">\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                    </button>\r\n                                </Link>\r\n                        </td>\r\n                    </tr>\r\n   \r\n                </Fragment>                 \r\n            )\r\n    }\r\n    export default connect(null, { })(Privacy)\r\n\r\n//export default Privacy","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { fetchPrivacy } from '../../actions/privacy'\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport Privacy  from './Privacy'\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nconst PrivacyList = props => {\r\n    console.log(props)\r\n    useEffect( ()=>(\r\n        props.fetchPrivacy()\r\n    ), [])\r\n    let history = useHistory()\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchPrivacy(undefined, pageNumber ,3)\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchPrivacy(undefined, undefined ,undefined,e.target.value)\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchPrivacy(undefined, undefined ,undefined,'')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Privacy Management</h5>\r\n                                   \r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n                                         \r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>SNo.</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Description</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {(function() {\r\n                                                \r\n                                                     if (props.isloading) {\r\n                                                        return (\r\n                                                            <Loader fullPage loading />\r\n\r\n                                                        )\r\n                                                     }else \r\n                                                    if (props.privacylist.success !== false && props.privacylist.STATUSCODE !== 4000) {\r\n\r\n                                                        return props.privacylist.response.docs\r\n                                                        .map( privacylist => <Privacy key={privacylist._id} {...privacylist}/> );\r\n\r\n                                                    } else if (props.privacylist.success === false && props.privacylist.STATUSCODE === 4000){\r\n                                                        if (props.login && props.login.success !== false)\r\n                                                        {\r\n                                                            return  history.push('/privacy')\r\n\r\n                                                        }\r\n                                                        return  history.push('/login')\r\n                                                    }\r\n                                                    })\r\n                                             ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.privacylist.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.privacylist.response.page}\r\n                                            itemsCountPerPage={props.privacylist.response.limit}\r\n                                            totalItemsCount={props.privacylist.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer />\r\n   \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({privacyReducer}) => ({\r\n\r\n    privacylist:privacyReducer.privacylist,\r\n    isloading:privacyReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchPrivacy})(PrivacyList)","\r\nimport React, { Component, Fragment, useEffect, useState,useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {  fetchPrivacy, postEditPrivacy } from '../../actions/privacy'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nimport './PrivacyForm.css'\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n    return ref.current;\r\n  }\r\n\r\nconst PrivacyForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n   console.log('lastIndex----',lastIndex);\r\n   \r\n   var id = window.location.href.substring(lastIndex + 1); //after this id=\"true\"\r\n   console.log('path----',id);\r\n\r\n    useEffect( ()=>(\r\n        props.fetchPrivacy(id)\r\n    ), [])\r\n    console.log('props values--->',props);\r\n\r\n    var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n    console.log('lastIndex----',lastIndex);\r\n\r\n    let pathEditView = window.location.href.split('/')[ window.location.href.split('/').length -2]\r\n    console.log('pathEditView--------->',pathEditView);\r\n\r\n    const isAddMode = id=='add' ? true:false;\r\n\r\n    const prevIsSuccess = usePrevious(props.isSuccess);    \r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted',props.isSuccess);\r\n\r\n        if(prevIsSuccess === false && props.isSuccess === true)\r\n        {\r\n   \r\n                toast.success(\"Privacy Updated Successfully.\")\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n           \r\n        }\r\n\r\n    }, [props.isSuccess,prevIsSuccess])\r\n\r\n\r\n\r\n    let definedid = ''\r\n    let defineddescription = ''\r\n    let defineddeleteId = ''\r\n    //deleteId\r\n    if(props.privacylist.response.docs.length == 1)\r\n    {\r\n        defineddeleteId = pathEditView == 'delete' ? props.privacylist.response.docs[0]._id: ''\r\n        definedid = props.privacylist.response.docs[0]._id\r\n\r\n        defineddescription = props.privacylist.response.docs[0].description\r\n\r\n    }\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            privacyId: definedid,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n\r\n            props.postAddPrivacy(fields)\r\n\r\n        } else {\r\n\r\n            props.postEditPrivacy(fields)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n            {props.isloading &&\r\n\r\n                <Loader fullPage loading />\r\n\r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n            { pathEditView == 'edit' && props.privacylist.success !== false && props.privacylist.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Privacy' : 'Edit Privacy'}</h1>\r\n                        \r\n\r\n                        <FormGroup row>\r\n                        <Label for=\"description\" md={3}>Description</Label>\r\n                        <Col md={9}>\r\n\r\n                            <CKEditor\r\n                                editor={ ClassicEditor }\r\n                                data={values.description}\r\n                                disabled={false}\r\n                                onInit={ editor => {\r\n                                    // You can store the \"editor\" and use when it is needed.\r\n                                    console.log( 'Editor is ready to use!', editor );\r\n                                } }\r\n                                onChange={ ( event, editor ) => {\r\n                                    const data = editor.getData();\r\n                                    setFieldValue(`description`, data)\r\n                                    console.log( { event, editor, data } );\r\n                                } }\r\n                                onBlur={ ( event, editor ) => {\r\n                                    console.log( 'Blur.', editor );\r\n                                } }\r\n                                onFocus={ ( event, editor ) => {\r\n                                    console.log( 'Focus.', editor );\r\n                                } }\r\n                            />\r\n\r\n                            <ErrorMessage name=\"description\" component=\"div\" className=\"invalid-feedback\" />\r\n                        \r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                        <Col md={9}>\r\n\r\n                            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\r\n                                {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                Save\r\n                            </button>\r\n                            <Link to={isAddMode ? '.' : '..'} className=\"btn btn-link\">Cancel</Link>\r\n\r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n        </Row>\r\n        </div>\r\n        <Footer />\r\n        </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({privacyReducer}) => ({\r\n    privacylist:privacyReducer.privacylist,\r\n    isSuccess:privacyReducer.isSuccess,\r\n    isloading:privacyReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps, {postEditPrivacy, fetchPrivacy })(PrivacyForm)\r\n","import axios from 'axios'\r\nimport { type } from 'os';\r\nimport { baseUrl, localUrl } from '../shared/baseUrl'\r\nimport { getToken } from './admin'\r\n\r\n\r\nexport const FETCH_BOOKING_LIST_START = 'FETCH_BOOKING_LIST_START'\r\nexport const FETCH_BOOKING_LIST_SUCCESS = 'FETCH_BOOKING_LIST_SUCCESS'\r\nexport const FETCH_BOOKING_LIST_FAILURE = 'FETCH_BOOKING_LIST_FAILURE'\r\n\r\nexport const POST_BOOKING_ADD_START = 'POST_BOOKING_ADD_START'\r\nexport const POST_BOOKING_ADD_SUCCESS = 'POST_BOOKING_ADD_SUCCESS'\r\nexport const POST_BOOKING_ADD_FAILURE = 'POST_BOOKING_ADD_FAILURE'\r\n\r\nexport const POST_BOOKING_EDIT_START = 'POST_BOOKING_EDIT_START'\r\nexport const POST_BOOKING_EDIT_SUCCESS = 'POST_BOOKING_EDIT_SUCCESS'\r\nexport const POST_BOOKING_EDIT_FAILURE = 'POST_BOOKING_EDIT_FAILURE'\r\n\r\nexport const POST_BOOKING_DELETE_START = 'POST_BOOKING_DELETE_START'\r\nexport const POST_BOOKING_DELETE_SUCCESS = 'POST_BOOKING_DELETE_SUCCESS'\r\nexport const POST_BOOKING_DELETE_FAILURE = 'POST_BOOKING_DELETE_FAILURE'\r\n\r\nexport const FETCH_DRIVER_LIST_START = 'FETCH_DRIVER_LIST_START'\r\nexport const FETCH_DRIVER_LIST_SUCCESS = 'FETCH_DRIVER_LIST_SUCCESS'\r\nexport const FETCH_DRIVER_LIST_FAILURE = 'FETCH_DRIVER_LIST_FAILURE'\r\n\r\nexport const FETCH_CUSTOMER_LIST_START = 'FETCH_CUSTOMER_LIST_START'\r\nexport const FETCH_CUSTOMER_LIST_SUCCESS = 'FETCH_CUSTOMER_LIST_SUCCESS'\r\nexport const FETCH_CUSTOMER_LIST_FAILURE = 'FETCH_CUSTOMER_LIST_FAILURE'\r\n\r\n//...................BOOKING ...............................\r\n\r\n    export const postEditBooking = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_BOOKING_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n    }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n    formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'api/editBooking/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_BOOKING_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_BOOKING_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n    }\r\n\r\n    export const fetchBooking = (id,page,limit,searchName) => {\r\n\r\n    let token = JSON.parse(getToken()).token\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n        }\r\n    return (dispatch) => {\r\n        dispatch(fetchBookingRequest())\r\n\r\n        axios\r\n        .get(baseUrl+'api/listBooking/', {\r\n            headers: headers,\r\n            params:{\r\n                ...(id ? { bookingId: id } : {}),\r\n                ...(searchName ? { searchName: searchName } : {}),\r\n                ...(page ? { page: page } : {}),\r\n                ...(limit ? { limit: limit } : {})\r\n            }\r\n            })\r\n        .then(res =>{\r\n            console.log('Response-------->',res)\r\n            dispatch(fetchBookingSuccess(res.data))\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            dispatch(fetchBookingFailure(err.message))\r\n        })\r\n    }\r\n    }\r\n\r\n    export const fetchBookingRequest = () => {\r\n    return {\r\n        type: FETCH_BOOKING_LIST_START\r\n    }\r\n    }\r\n\r\n    export const fetchBookingSuccess = booking => {\r\n    return {\r\n        type: FETCH_BOOKING_LIST_SUCCESS,\r\n        payload: booking\r\n    }\r\n    }\r\n\r\n    export const fetchBookingFailure = err => {\r\n    return {\r\n        type: FETCH_BOOKING_LIST_FAILURE,\r\n        payload: err\r\n    }\r\n    }\r\n\r\n\r\n    export const fetchDriver = (id) => dispatch =>{\r\n\r\n        console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n        let token = JSON.parse(getToken()).token\r\n    \r\n        dispatch( {type:'FETCH_DRIVER_LIST_START'} )\r\n    \r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': token\r\n          }\r\n          \r\n        axios\r\n        .get(baseUrl+'admin/listDriver/', {\r\n            headers: headers,\r\n            params:{\r\n                ...(id ? { driverId: id } : {})\r\n            }\r\n            })\r\n        .then(res =>{\r\n            console.log(res)\r\n            dispatch( { type:'FETCH_DRIVER_LIST_SUCCESS', payload: res.data } )\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            dispatch( { type:'FETCH_DRIVER_LIST_FAILURE', payload: err.response  } )\r\n            \r\n        })\r\n    }\r\n\r\n    export const fetchCustomer = (id) => dispatch =>{\r\n\r\n        console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n        let token = JSON.parse(getToken()).token\r\n    \r\n        dispatch( {type:'FETCH_CUSTOMER_LIST_START'} )\r\n    \r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': token\r\n          }\r\n          \r\n        axios\r\n        .get(baseUrl+'admin/listCustomer/', {\r\n            headers: headers,\r\n            params:{\r\n                ...(id ? { customerId: id } : {})\r\n            }\r\n            })\r\n        .then(res =>{\r\n            console.log(res)\r\n            dispatch( { type:'FETCH_CUSTOMER_LIST_SUCCESS', payload: res.data } )\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            dispatch( { type:'FETCH_CUSTOMER_LIST_FAILURE', payload: err.response  } )\r\n            \r\n        })\r\n    }\r\n\r\n\r\n","\r\nimport React, { Component, Fragment, useEffect, useState,useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {  fetchBooking, postEditBooking, fetchDriver, fetchCustomer } from '../../actions/booking'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nimport Select from 'react-select';\r\n\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n    return ref.current;\r\n  }\r\n\r\nconst BookingForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n   console.log('lastIndex----',lastIndex);\r\n   \r\n   var id = window.location.href.substring(lastIndex + 1); //after this id=\"true\"\r\n   console.log('path----',id);\r\n\r\n    useEffect( ()=>(\r\n        props.fetchBooking(id),\r\n        props.fetchDriver(),\r\n        props.fetchCustomer()\r\n    ), [])\r\n    console.log('props values--->',props);\r\n\r\n    var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n    console.log('lastIndex----',lastIndex);\r\n\r\n    let pathEditView = window.location.href.split('/')[ window.location.href.split('/').length -2]\r\n    console.log('pathEditView--------->',pathEditView);\r\n\r\n    const isAddMode = id=='add' ? true:false;\r\n\r\n    const prevIsSuccess = usePrevious(props.isSuccess);    \r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted',props.isSuccess);\r\n\r\n        if(prevIsSuccess === false && props.isSuccess === true)\r\n        {\r\n   \r\n                toast.success(\"Booking Updated Successfully.\")\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n           \r\n        }\r\n\r\n    }, [props.isSuccess,prevIsSuccess])\r\n\r\n    let [pickupDate, setPickupDate]   = useState(null);\r\n    let [dropDate, setDropDate]   = useState(null);\r\n\r\n\r\n    let definedid = ''\r\n    let definedpickupLocation  = ''\r\n    let defineddropLocation = ''\r\n    let definedpickupDate = ''\r\n    let defineddropDate = ''\r\n    let definedcustomerId = ''\r\n    let defineddriverId = ''\r\n    let defineddistance = ''\r\n    let definedprice = ''\r\n    let definedbookingNumber = ''\r\n    let defineddriverStatus = ''\r\n    let definedcustomerConfirmation = ''\r\n    let defineddriverConfirmation = ''\r\n    let definedisJourneyCompleted = ''\r\n    let defineddeliveryStatus = ''\r\n    let definedvehicleDetail = ''\r\n    let definedpickupNotes = ''\r\n    let definedvehicleId = ''\r\n\r\n    //deleteId\r\n    if(!isAddMode && props.bookinglist.response.docs.length == 1)\r\n    {\r\n        props.bookinglist.response.docs.map((response) => \r\n        {\r\n            definedid = response._id\r\n            definedpickupLocation  = response.pickupLocation\r\n            defineddropLocation = response.dropLocation\r\n            definedpickupDate = response.pickupDate\r\n            defineddropDate = response.dropDate\r\n            definedcustomerId = response.customerId ? response.customerId._id : null\r\n            defineddriverId   =  response.driverId  ? response.driverId._id   : null\r\n            defineddistance = response.distance\r\n            definedprice = response.price\r\n            definedbookingNumber = response.bookingNumber\r\n            defineddriverStatus = response.driverStatus\r\n            definedcustomerConfirmation = response.customerConfirmation\r\n            defineddriverConfirmation = response.driverConfirmation\r\n            definedisJourneyCompleted = response.isJourneyCompleted\r\n            defineddeliveryStatus = response.deliveryStatus\r\n            definedvehicleDetail = response.vehicleDetail\r\n            definedpickupNotes = response.pickupNotes\r\n            definedvehicleId = response.vehicleId\r\n        })\r\n    }\r\n    useEffect( ()=>{\r\n\r\n        if(definedpickupDate && definedpickupDate != '' )\r\n       {\r\n           setPickupDate(new Date(definedpickupDate))\r\n       }\r\n\r\n   },[definedpickupDate])\r\n\r\n   useEffect( ()=>{\r\n\r\n    if(defineddropDate && defineddropDate != '' )\r\n   {\r\n       setDropDate(new Date(defineddropDate))\r\n   }\r\n\r\n    },[defineddropDate])\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n\r\n        addEditFields ={\r\n            pickupLocation  : definedpickupLocation,\r\n            dropLocation : defineddropLocation,\r\n            pickupDate : definedpickupDate,\r\n            dropDate : defineddropDate,\r\n            customerId : definedcustomerId,\r\n            driverId : defineddriverId,\r\n            distance : defineddistance,\r\n            price : definedprice,\r\n            bookingNumber : definedbookingNumber,\r\n            driverStatus : defineddriverStatus,\r\n            customerConfirmation : definedcustomerConfirmation,\r\n            driverConfirmation : defineddriverConfirmation,\r\n            isJourneyCompleted : definedisJourneyCompleted,\r\n            deliveryStatus : defineddeliveryStatus,\r\n            vehicleDetail : definedvehicleDetail,\r\n            pickupNotes : definedpickupNotes     \r\n        }\r\n\r\n        valdationShape= {\r\n            bookingNumber: Yup.string()\r\n                .required('bookingNumber is required')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            bookingId: definedid,\r\n            pickupLocation  : definedpickupLocation,\r\n            dropLocation : defineddropLocation,\r\n            pickupDate : definedpickupDate,\r\n            dropDate : defineddropDate,\r\n            customerId : definedcustomerId,\r\n            driverId : defineddriverId,\r\n            distance : defineddistance,\r\n            price : definedprice,\r\n            bookingNumber : definedbookingNumber,\r\n            driverStatus : defineddriverStatus,\r\n            customerConfirmation : definedcustomerConfirmation,\r\n            driverConfirmation : defineddriverConfirmation,\r\n            isJourneyCompleted : definedisJourneyCompleted,\r\n            deliveryStatus : defineddeliveryStatus,\r\n            vehicleDetail : definedvehicleDetail,\r\n            pickupNotes : definedpickupNotes \r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            bookingNumber: Yup.string()\r\n                .required('bookingNumber is required')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n\r\n            props.postAddBooking(fields)\r\n\r\n        } else {\r\n\r\n            props.postEditBooking(fields)\r\n        }\r\n    }\r\n\r\n    const DriverDetail=({onChange, onBlur, name, driverdetail, value, errors, touched, mode}) => {\r\n\r\n        console.log('name---------->',name);\r\n        console.log('value---------->',value);\r\n        console.log('practiceLabs---------->',driverdetail);\r\n        //let savedValue= value.map( mappval => mappval._id)\r\n\r\n        const handleChange = value => {\r\n        // This is going to call setFieldValue and manually update values \r\n        onChange(name,  value.value  );\r\n        };\r\n    \r\n        const handleBlur = () => {\r\n        // this is going to call setFieldTouched and manually update touched.topcis\r\n        onBlur(name, true);\r\n        };\r\n\r\n        return (\r\n        <div>\r\n            <Select\r\n            options={driverdetail.map(v=>({value:v._id, label:`${v.firstName} ${v.lastName}`, isDisabled: mode ==='view'? true:false}))}\r\n            withAll={true}\r\n            isDisabled={mode ==='view'? true:false}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={driverdetail.map(v=>({value:v._id, label:`${v.firstName} ${v.lastName}`})).filter(v=>value ===v.value)}\r\n\r\n            />\r\n        </div>);\r\n    }\r\n\r\n    let allDriverDetail = []\r\n\r\n    if (props.driverlist.success !== false && props.driverlist.STATUSCODE !== 400) {\r\n        allDriverDetail=props.driverlist.response.docs\r\n    }    \r\n\r\n    const CustomerDetail=({onChange, onBlur, name, customerdetail, value, errors, touched, mode}) => {\r\n\r\n        console.log('name---------->',name);\r\n        console.log('value---------->',value);\r\n        console.log('practiceLabs---------->',customerdetail);\r\n        //let savedValue= value.map( mappval => mappval._id)\r\n\r\n        const handleChange = value => {\r\n        // This is going to call setFieldValue and manually update values \r\n        onChange(name,  value.value  );\r\n        };\r\n    \r\n        const handleBlur = () => {\r\n        // this is going to call setFieldTouched and manually update touched.topcis\r\n        onBlur(name, true);\r\n        };\r\n\r\n        return (\r\n        <div>\r\n            <Select\r\n            options={customerdetail.map(v=>({value:v._id, label:`${v.firstName} ${v.lastName}`, isDisabled: mode ==='view'? true:false}))}\r\n            \r\n            withAll={true}\r\n            isDisabled={true}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={customerdetail.map(v=>({value:v._id, label:`${v.firstName} ${v.lastName}`})).filter(v=>value ===v.value)}\r\n\r\n            />\r\n        </div>);\r\n    }\r\n\r\n    let allCustomerDetail = []\r\n\r\n    if (props.customerlist.success !== false && props.customerlist.STATUSCODE !== 400) {\r\n        allCustomerDetail=props.customerlist.response.docs\r\n    }    \r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n            {props.isloading &&\r\n\r\n                <Loader fullPage loading />\r\n\r\n            }\r\n\r\n            { pathEditView == 'edit' && props.bookinglist.success !== false && props.bookinglist.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue, setFieldTouched,handleChange }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Booking' : 'Edit Booking'}</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-user-plus\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'marginRight':'20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        \r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Customer Booking Information :</span></label>\r\n                                                                                            \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                     \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Booking Number</label>\r\n                                                <Field name=\"bookingNumber\"  \r\n                                                     disabled type=\"text\" className={'form-control' + (errors.bookingNumber && touched.bookingNumber ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"bookingNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Customer Name</label>\r\n                                            <CustomerDetail \r\n                                                name={\"customerId\"} \r\n                                                customerdetail={allCustomerDetail}\r\n                                                value={values.customerId} \r\n                                                onChange={setFieldValue}\r\n                                                onBlur={setFieldTouched}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                mode={\"edit\"} \r\n\r\n                                             />\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Pickup Location</label>\r\n                                                <Field name=\"pickupLocation\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.pickupLocation && touched.pickupLocation ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"pickupLocation\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Drop Location</label>\r\n                                                <Field name=\"dropLocation\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.dropLocation && touched.dropLocation ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"dropLocation\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}> \r\n                                        <FormGroup>\r\n                                            <label>Pickup Date</label>\r\n                                            <div>\r\n                                            <DatePicker\r\n                                                    selected={pickupDate}\r\n                                                    onChange={(dt) => {\r\n                                                    // console.log('dt----',dt);\r\n                                                        setPickupDate(dt)\r\n                                                        setFieldValue(`pickupDate`,new Date(dt))\r\n                                                    }}\r\n                                                    dateFormat = 'yyyy-MM-dd'\r\n                                                    isClearable\r\n                                                    showYearDropdown\r\n                                                    scrollableYearDropdown\r\n                                            />\r\n                                            </div>                                            \r\n                                            <ErrorMessage name=\"pickupDate\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Drop Date</label>\r\n                                            <div>\r\n                                            <DatePicker\r\n                                                    selected={dropDate}\r\n                                                    onChange={(dt) => {\r\n                                                    // console.log('dt----',dt);\r\n                                                        setDropDate(dt)\r\n                                                        setFieldValue(`dropDate`,new Date(dt))\r\n                                                    }}\r\n                                                    dateFormat = 'yyyy-MM-dd'\r\n                                                    isClearable\r\n                                                    showYearDropdown\r\n                                                    scrollableYearDropdown\r\n                                            />\r\n                                            </div>                                             \r\n                                            <ErrorMessage name=\"dropDate\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        </Row>\r\n                                        <Row>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Distance</label>\r\n                                                <Field name=\"distance\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.distance && touched.distance ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"distance\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Price</label>\r\n                                                <Field name=\"price\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.price && touched.price ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"price\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Customer Confirmation</label>\r\n                                                <Field name=\"customerConfirmation\" as=\"select\" className={'form-control' + (errors.customerConfirmation && touched.customerConfirmation ? ' is-invalid' : '')}>\r\n                                                        <option value=\"initiate\">Select an Option </option>\r\n                                                        <option value=\"confirm\">Confirm</option>\r\n                                                        <option value=\"decline\">Decline</option>\r\n                                                </Field>  \r\n                                                <ErrorMessage name=\"customerConfirmation\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>PickupNotes</label>\r\n                                                <Field name=\"pickupNotes\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.pickupNotes && touched.pickupNotes ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"pickupNotes\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n \r\n\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n    \r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Driver Information :</span></label>\r\n                                                                                            \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Driver Status</label>\r\n                                                <Field name=\"driverStatus\" as=\"select\" className={'form-control' + (errors.driverStatus && touched.driverStatus ? ' is-invalid' : '')}>\r\n                                                        <option value=\"free\">Free</option>\r\n                                                        <option value=\"assigned\">Assigned</option>\r\n                                                        <option value=\"schedule\">Schedule</option>\r\n                                                        <option value=\"complete\">Complete</option>\r\n                                                </Field>  \r\n\r\n                                                <ErrorMessage name=\"driverStatus\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Driver Confirmation</label>\r\n                                                <Field name=\"driverConfirmation\" as=\"select\" className={'form-control' + (errors.driverConfirmation && touched.driverConfirmation ? ' is-invalid' : '')}>\r\n                                                         <option value=\"initiate\">Select an Option</option>\r\n                                                        <option value=\"confirm\">Confirm</option>\r\n                                                        <option value=\"decline\">Decline</option>\r\n                                                </Field>  \r\n                                                <ErrorMessage name=\"driverConfirmation\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>IsJourneyCompleted ? </label>\r\n                                                <Field name=\"driverStatus\" as=\"select\" className={'form-control' + (errors.driverStatus && touched.driverStatus ? ' is-invalid' : '')}>\r\n                                                        <option value=\"false\">No</option>\r\n                                                        <option value=\"true\">Yes</option>\r\n                                                </Field>  \r\n                                                <ErrorMessage name=\"driverStatus\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>DeliveryStatus</label>\r\n                                                <Field name=\"deliveryStatus\" as=\"select\" className={'form-control' + (errors.deliveryStatus && touched.deliveryStatus ? ' is-invalid' : '')}>\r\n                                                         <option value=\"initiate\">Select an Option</option>\r\n                                                        <option value=\"delivered\">Delivered</option>\r\n                                                </Field>  \r\n                                                <ErrorMessage name=\"deliveryStatus\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Driver</label>\r\n                                       \r\n                                            <DriverDetail \r\n                                                name={\"driverId\"} \r\n                                                driverdetail={allDriverDetail}\r\n                                                value={values.driverId} \r\n                                                onChange={setFieldValue}\r\n                                                onBlur={setFieldTouched}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                mode={\"edit\"} \r\n\r\n                                             />\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                 \r\n\r\n                                    </Row>\r\n\r\n\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'marginRight': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                            </Col>\r\n                        \r\n                        </Row>\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR VIEW  START   */}\r\n\r\n            { pathEditView == 'view' && props.bookinglist.success !== false && props.bookinglist.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues}>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue, setFieldTouched }) => {\r\n                    console.log('values.status--',values.status);\r\n\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>View Booking</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-user-plus\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        \r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Customer Booking Information :</span></label>\r\n                                                                                            \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                     \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Booking Number</label>\r\n                                                <span name=\"bookingNumber\"  className='form-control  no-border'>\r\n                                                            {values.bookingNumber}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Customer</label>\r\n                                       \r\n                                            <span name=\"customerId\"  className='form-control  no-border'>\r\n                                                {\r\n                                                 values.customerId ? \r\n                                                  allCustomerDetail.map((e) => {\r\n                                                      if(e._id == values.customerId)\r\n                                                      {\r\n                                                          return e.firstName + ' ' + e.lastName\r\n                                                      }\r\n                                                  }) \r\n                                                 \r\n                                                 : 'N/A' \r\n                                                }\r\n                                            </span>\r\n\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Pickup Location</label>\r\n                                                <span name=\"pickupLocation\"  className='form-control  no-border'>\r\n                                                            {values.pickupLocation}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Drop Location</label>\r\n                                                <span name=\"dropLocation\"  className='form-control  no-border'>\r\n                                                            {values.dropLocation}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}> \r\n                                        <FormGroup>\r\n                                            <label>Pickup Date</label>\r\n                                                <span name=\"pickupDate\"  className='form-control  no-border'>\r\n                                                            {\r\n                                                                Intl.DateTimeFormat('en-US',{\r\n                                                                    year: 'numeric',\r\n                                                                    month: 'short',\r\n                                                                    day: '2-digit' }).format(new Date(values.pickupDate))\r\n\r\n                                                            }\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Drop Date</label>\r\n                                                <span name=\"dropDate\"  className='form-control  no-border'>\r\n                                                            {\r\n                                                                Intl.DateTimeFormat('en-US',{\r\n                                                                    year: 'numeric',\r\n                                                                    month: 'short',\r\n                                                                    day: '2-digit' }).format(new Date(values.dropDate))\r\n\r\n                                                            }\r\n                                                </span>\r\n                                            \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                     \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Distance</label>\r\n                                                <span name=\"distance\"  className='form-control  no-border'>\r\n                                                            {values.distance}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Price</label>\r\n                                                <span name=\"price\"  className='form-control  no-border'>\r\n                                                            {values.price}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Customer Confirmation</label>\r\n                                                <span name=\"customerConfirmation\"  className='form-control  no-border'>\r\n                                                            {values.customerConfirmation == 'initiate' ? 'N/A' : values.customerConfirmation}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>PickupNotes</label>\r\n                                                <span name=\"pickupNotes\"  className='form-control  no-border'>\r\n                                                            {values.pickupNotes}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n    \r\n                                        <Col lg={12}>\r\n                                            <FormGroup>\r\n                                                <label><span style={{ color:'#605ca8'}}>Driver Information :</span></label>\r\n                                                                                            \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Driver Status</label>\r\n                                                <span name=\"driverStatus\"  className='form-control  no-border'>\r\n                                                            {values.driverStatus }\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Driver Confirmation</label>\r\n                                                <span name=\"driverConfirmation\"  className='form-control  no-border'>\r\n                                                            {values.driverConfirmation == 'initiate' ? 'N/A' : values.driverConfirmation}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>IsJourneyCompleted ? </label>\r\n                                                <span name=\"isJourneyCompleted\"  className='form-control  no-border'>\r\n                                                    {values.driverStatus == 'false' ? 'No' : 'Yes'}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Delivery Status</label>\r\n                                                <span name=\"deliveryStatus\"  className='form-control  no-border'>\r\n                                                            {values.deliveryStatus == 'initiate' ? 'N/A' : values.deliveryStatus}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Driver</label>\r\n                                       \r\n                                            <span name=\"driverId\"  className='form-control  no-border'>\r\n                                                {\r\n                                                 values.driverId ? \r\n                                                  allDriverDetail.map((e) => {\r\n                                                      if(e._id == values.driverId)\r\n                                                      {\r\n                                                          return e.firstName + ' ' + e.lastName\r\n                                                      }\r\n                                                  }) \r\n                                                 \r\n                                                 : 'N/A' \r\n                                                }\r\n                                            </span>\r\n\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n\r\n\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                            </Col>\r\n                        \r\n                        </Row>\r\n       \r\n                    </Form>\r\n                    );\r\n                    }}\r\n                    </Formik>\r\n                }\r\n\r\n            {/*   THIS PART FOR VIEW  END   */}\r\n\r\n\r\n        </Row>\r\n        </div>\r\n        <Footer />\r\n    </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({bookingReducer}) => ({\r\n\r\n                bookinglist  : bookingReducer.bookinglist,\r\n                driverlist   : bookingReducer.driverlist,\r\n                customerlist : bookingReducer.customerlist,\r\n                isSuccess    : bookingReducer.isSuccess,\r\n                isloading    :  bookingReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps, {postEditBooking, fetchBooking, fetchDriver, fetchCustomer })(BookingForm)\r\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport BookingForm from './BookingForm'\r\n\r\nconst Booking = (props) => {\r\n\r\n    console.log('admin props --->',props.status);\r\n\r\n    return ( \r\n                    <tr >\r\n                        <td >\r\n                            {props.bookingNumber}   \r\n                        </td>\r\n                        <td >\r\n                        {\r\n                            Intl.DateTimeFormat('en-US',{\r\n                                year: 'numeric',\r\n                                month: 'short',\r\n                                day: '2-digit' }).format(new Date(props.pickupDate))\r\n\r\n                        }\r\n                        </td>  \r\n                        <td >\r\n                        {\r\n                            Intl.DateTimeFormat('en-US',{\r\n                                year: 'numeric',\r\n                                month: 'short',\r\n                                day: '2-digit' }).format(new Date(props.dropDate))\r\n\r\n                        }\r\n                        </td>  \r\n                        <td>{ props.customerId !== null ? `${props.customerId.firstName} ${props.customerId.lastName} `: '' }</td>\r\n                        <td>{ props.driverId ? `${props.driverId.firstName} ${props.driverId.lastName}     `: '' }</td>\r\n                        <td>{props.driverStatus}</td>\r\n                        <td>\r\n                        {props.deliveryStatus == 'delivered' ?\r\n                         <span class=\"btn-smbadge badge bg-green\">Delivered</span> :\r\n                         <span class=\"btn-smbadge badge bg-yellow\">{props.deliveryStatus}</span> }\r\n                        </td>\r\n                        \r\n                         <td className=\"text-center\">\r\n                                <Link className=\"view\" title=\"View\" style={{marginRight:'5px'}} to= {{ pathname: `/booking/view/${props._id}` }}  >\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                </Link>\r\n                                {props.deliveryStatus !== 'delivered' ?\r\n                                <Link disabled className=\"view\" title=\"Edit\" style={{marginRight:'5px'}} to= {{ pathname: `/booking/edit/${props._id}` }}  >\r\n                                   <i  className=\"fa fa-edit\"></i>\r\n                                </Link>\r\n\r\n                                 :\r\n                                 <Link onClick={e => e.preventDefault()} >\r\n                                   <i  className=\"fa fa-edit\"></i>\r\n                                </Link>\r\n                             }\r\n                        </td> \r\n                    </tr>\r\n               )\r\n    }\r\n    export default connect(null, {  })(Booking)\r\n\r\n//export default Booking","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { fetchBooking } from '../../actions/booking'\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport Booking  from './Booking'\r\nimport { Loader } from 'react-overlay-loader';\r\n \r\nimport 'react-overlay-loader/styles.css';\r\nconst BookingList = props => {\r\n    console.log(props)\r\n    useEffect( ()=>(\r\n        props.fetchBooking()\r\n    ), [])\r\n    let history = useHistory()\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchBooking(undefined, pageNumber ,10,undefined)\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchBooking(undefined, undefined ,undefined,e.target.value)\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchBooking(undefined, undefined ,undefined,'')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Booking Management</h5>\r\n                                 \r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n                                            <input id=\"searchinput\" placeholder=\"Search By Booking Name\" type=\"search\" onChange={ (e) => { handlePageSearch(e) } } className=\"form-control\" />\r\n                                            \r\n                                            <span id=\"searchclear\" className=\"glyphicon\" onClick={ ()=> {handleClear()}}>\r\n                                                <i className=\"fa fa-times\"></i>\r\n                                            </span>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>Booking Number</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Pickup Date</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Drop Date</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Customer Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Driver Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Driver Status</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Delivery Status</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {(function() {\r\n                                                \r\n                                                     if (props.isloading) {\r\n                                                        return (\r\n                                                            <Loader fullPage loading />\r\n\r\n                                                        )\r\n                                                     }else \r\n                                                    if (props.bookinglist.success !== false && props.bookinglist.STATUSCODE !== 4000) {\r\n\r\n                                                        return props.bookinglist.response.docs\r\n                                                        .map( bookinglist => <Booking key={bookinglist._id} {...bookinglist}/> );\r\n\r\n                                                    } else if (props.bookinglist.success === false && props.bookinglist.STATUSCODE === 4000){\r\n                                                        if (props.login && props.login.success !== false)\r\n                                                        {\r\n                                                            return  history.push('/booking')\r\n\r\n                                                        }\r\n                                                        return  history.push('/login')\r\n                                                    }\r\n                                                    })\r\n                                             ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.bookinglist.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.bookinglist.response.page}\r\n                                            itemsCountPerPage={props.bookinglist.response.limit}\r\n                                            totalItemsCount={props.bookinglist.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer />\r\n   \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({bookingReducer}) => ({\r\n\r\n    bookinglist : bookingReducer.bookinglist,\r\n    isSuccess   : bookingReducer.isSuccess,\r\n    message     : bookingReducer.message,\r\n    isloading   : bookingReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchBooking})(BookingList)","import axios from 'axios'\r\nimport { type } from 'os';\r\nimport { baseUrl, localUrl } from '../shared/baseUrl'\r\nimport { getToken } from './admin'\r\n\r\n\r\nexport const FETCH_ABOUTUS_LIST_START = 'FETCH_ABOUTUS_LIST_START'\r\nexport const FETCH_ABOUTUS_LIST_SUCCESS = 'FETCH_ABOUTUS_LIST_SUCCESS'\r\nexport const FETCH_ABOUTUS_LIST_FAILURE = 'FETCH_ABOUTUS_LIST_FAILURE'\r\n\r\nexport const POST_ABOUTUS_ADD_START = 'POST_ABOUTUS_ADD_START'\r\nexport const POST_ABOUTUS_ADD_SUCCESS = 'POST_ABOUTUS_ADD_SUCCESS'\r\nexport const POST_ABOUTUS_ADD_FAILURE = 'POST_ABOUTUS_ADD_FAILURE'\r\n\r\nexport const POST_ABOUTUS_EDIT_START = 'POST_ABOUTUS_EDIT_START'\r\nexport const POST_ABOUTUS_EDIT_SUCCESS = 'POST_ABOUTUS_EDIT_SUCCESS'\r\nexport const POST_ABOUTUS_EDIT_FAILURE = 'POST_ABOUTUS_EDIT_FAILURE'\r\n\r\nexport const POST_ABOUTUS_DELETE_START = 'POST_ABOUTUS_DELETE_START'\r\nexport const POST_ABOUTUS_DELETE_SUCCESS = 'POST_ABOUTUS_DELETE_SUCCESS'\r\nexport const POST_ABOUTUS_DELETE_FAILURE = 'POST_ABOUTUS_DELETE_FAILURE'\r\n\r\n\r\n\r\n//...................ABOUTUS ...............................\r\nexport const fetchAboutus = (id,page,limit,searchName) => dispatch =>{\r\n\r\n    console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    dispatch( {type:'FETCH_ABOUTUS_LIST_START'} )\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n      \r\n    axios\r\n    .get(baseUrl+'api/listAboutUs/', {\r\n        headers: headers,\r\n        params:{\r\n            ...(id ? { aboutUsId: id } : {}),\r\n            ...(searchName ? { searchName: searchName } : {}),\r\n            ...(page ? { page: page } : {}),\r\n            ...(limit ? { limit: limit } : {})\r\n        }\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'FETCH_ABOUTUS_LIST_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'FETCH_ABOUTUS_LIST_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\n\r\nexport const postEditAboutus = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_ABOUTUS_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n      formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'api/editAboutUs/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_ABOUTUS_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_ABOUTUS_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nconst Aboutus = (props) => {\r\n\r\n    console.log('admin props --->',props);\r\n\r\n    return ( \r\n                <Fragment>\r\n                    <tr >\r\n                        <td >1.</td>  \r\n                        <td dangerouslySetInnerHTML={{__html: props.description}} />  \r\n                        <td>\r\n                                <Link to= {{ pathname: `/aboutus/edit/${props._id}` }}  >\r\n\r\n                                    <button type=\"button\"   className=\"btn btn-primary\" id=\"modalprintedit\"\r\n                                    data-toggle=\"modal\" style={{'marginRight':'10px'}} data-target=\"#modal-form-Edit\"\r\n                                    title=\"Edit\">\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                    </button>\r\n                                </Link>\r\n                        </td>\r\n                    </tr>\r\n   \r\n                </Fragment>                 \r\n            )\r\n    }\r\n    export default connect(null, { })(Aboutus)\r\n\r\n//export default Aboutus","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { fetchAboutus } from '../../actions/aboutus'\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport Aboutus  from './Aboutus'\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nconst AboutusList = props => {\r\n    console.log(props)\r\n    useEffect( ()=>(\r\n        props.fetchAboutus()\r\n    ), [])\r\n    let history = useHistory()\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchAboutus(undefined, pageNumber ,3)\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchAboutus(undefined, undefined ,undefined,e.target.value)\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchAboutus(undefined, undefined ,undefined,'')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Aboutus Management</h5>\r\n                                   \r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n                                         \r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>SNo.</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Description</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {(function() {\r\n                                                \r\n                                                     if (props.isloading) {\r\n                                                        return (\r\n                                                            <Loader fullPage loading />\r\n\r\n                                                        )\r\n                                                     }else \r\n                                                    if (props.aboutuslist.success !== false && props.aboutuslist.STATUSCODE !== 4000) {\r\n\r\n                                                        return props.aboutuslist.response.docs\r\n                                                        .map( aboutuslist => <Aboutus key={aboutuslist._id} {...aboutuslist}/> );\r\n\r\n                                                    } else if (props.aboutuslist.success === false && props.aboutuslist.STATUSCODE === 4000){\r\n                                                        if (props.login && props.login.success !== false)\r\n                                                        {\r\n                                                            return  history.push('/aboutus')\r\n\r\n                                                        }\r\n                                                        return  history.push('/login')\r\n                                                    }\r\n                                                    })\r\n                                             ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.aboutuslist.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.aboutuslist.response.page}\r\n                                            itemsCountPerPage={props.aboutuslist.response.limit}\r\n                                            totalItemsCount={props.aboutuslist.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer />\r\n   \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({aboutusReducer}) => ({\r\n\r\n    aboutuslist:aboutusReducer.aboutuslist,\r\n    isloading:aboutusReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchAboutus})(AboutusList)","\r\nimport React, { Component, Fragment, useEffect, useState,useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {  fetchAboutus, postEditAboutus } from '../../actions/aboutus'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nimport './AboutusForm.css'\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n    return ref.current;\r\n  }\r\n\r\nconst AboutusForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n   console.log('lastIndex----',lastIndex);\r\n   \r\n   var id = window.location.href.substring(lastIndex + 1); //after this id=\"true\"\r\n   console.log('path----',id);\r\n\r\n    useEffect( ()=>(\r\n        props.fetchAboutus(id)\r\n    ), [])\r\n    console.log('props values--->',props);\r\n\r\n    var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n    console.log('lastIndex----',lastIndex);\r\n\r\n    let pathEditView = window.location.href.split('/')[ window.location.href.split('/').length -2]\r\n    console.log('pathEditView--------->',pathEditView);\r\n\r\n    const isAddMode = id=='add' ? true:false;\r\n\r\n    const prevIsSuccess = usePrevious(props.isSuccess);    \r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted',props.isSuccess);\r\n\r\n        if(prevIsSuccess === false && props.isSuccess === true)\r\n        {\r\n   \r\n                toast.success(\"Aboutus Updated Successfully.\")\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n           \r\n        }\r\n\r\n    }, [props.isSuccess,prevIsSuccess])\r\n\r\n\r\n\r\n    let definedid = ''\r\n    let defineddescription = ''\r\n    let defineddeleteId = ''\r\n    //deleteId\r\n    if(props.aboutuslist.response.docs.length == 1)\r\n    {\r\n        defineddeleteId = pathEditView == 'delete' ? props.aboutuslist.response.docs[0]._id: ''\r\n        definedid = props.aboutuslist.response.docs[0]._id\r\n\r\n        defineddescription = props.aboutuslist.response.docs[0].description\r\n\r\n    }\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            aboutUsId: definedid,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n\r\n            props.postAddAboutus(fields)\r\n\r\n        } else {\r\n\r\n            props.postEditAboutus(fields)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n            {props.isloading &&\r\n\r\n                <Loader fullPage loading />\r\n\r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n            { pathEditView == 'edit' && props.aboutuslist.success !== false && props.aboutuslist.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Aboutus' : 'Edit Aboutus'}</h1>\r\n                        \r\n\r\n                        <FormGroup row>\r\n                        <Label for=\"description\" md={3}>Description</Label>\r\n                        <Col md={9}>\r\n\r\n                            <CKEditor\r\n                                editor={ ClassicEditor }\r\n                                data={values.description}\r\n                                disabled={false}\r\n                                onInit={ editor => {\r\n                                    // You can store the \"editor\" and use when it is needed.\r\n                                    console.log( 'Editor is ready to use!', editor );\r\n                                } }\r\n                                onChange={ ( event, editor ) => {\r\n                                    const data = editor.getData();\r\n                                    setFieldValue(`description`, data)\r\n                                    console.log( { event, editor, data } );\r\n                                } }\r\n                                onBlur={ ( event, editor ) => {\r\n                                    console.log( 'Blur.', editor );\r\n                                } }\r\n                                onFocus={ ( event, editor ) => {\r\n                                    console.log( 'Focus.', editor );\r\n                                } }\r\n                            />\r\n\r\n                            <ErrorMessage name=\"description\" component=\"div\" className=\"invalid-feedback\" />\r\n                        \r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                        <Col md={9}>\r\n\r\n                            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\r\n                                {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                Save\r\n                            </button>\r\n                            <Link to={isAddMode ? '.' : '..'} className=\"btn btn-link\">Cancel</Link>\r\n\r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n        </Row>\r\n        </div>\r\n        <Footer />\r\n        </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({aboutusReducer}) => ({\r\n    aboutuslist:aboutusReducer.aboutuslist,\r\n    isSuccess:aboutusReducer.isSuccess,\r\n    isloading:aboutusReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps, {postEditAboutus, fetchAboutus })(AboutusForm)\r\n","\r\nimport React, { Component, Fragment, useEffect, useState } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\n\r\nimport * as Yup from 'yup'\r\nimport { postChangePasswordAdmin } from '../../actions/admin'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nconst ChangePassword = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n    console.log('props values--->',props);\r\n\r\n    //deleteId\r\n\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n\r\n    addEditFields ={\r\n        newPassword: ''\r\n    }\r\n\r\n    valdationShape= {\r\n\r\n        newPassword: Yup.string()\r\n            .required('New Password is required')\r\n    }\r\n    \r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n        \r\n       props.postChangePasswordAdmin(fields)\r\n\r\n       toast(\"Password Changed Successfully.\")\r\n        setTimeout( ()=>{\r\n\r\n            history.push('/dashboard') \r\n\r\n        },2500)\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <Container fluid={true} className=\"page\" style={{marginLeft: '313px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>Change Password</h1>\r\n\r\n\r\n                        <FormGroup row>\r\n                        <Label for=\"newPassword\" md={3}>New Password </Label>\r\n                        <Col md={9}>\r\n\r\n                                <Field name=\"newPassword\" type=\"text\" className={'form-control' + (errors.newPassword && touched.newPassword ? ' is-invalid' : '')} />\r\n                               \r\n                                <ErrorMessage name=\"newPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                       \r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                        <Col md={9}>\r\n\r\n                            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\r\n                                {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                Save\r\n                            </button>\r\n                            <Link to={'..'} className=\"btn btn-link\">Cancel</Link>\r\n                            \r\n\r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            \r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n\r\n        </Row>\r\n        </Container>\r\n    </Fragment>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n\r\n    changepassword:adminReducer.changepassword\r\n})\r\n\r\nexport default connect(mapStateToProps, { postChangePasswordAdmin })(ChangePassword)\r\n","import React, {Fragment} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LoginForm from './components/login/LoginForm'\nimport AdminList from './components/admin/AdminList'\nimport AdminForm from './components/admin/AdminForm'\n\nimport DriverList from './components/driver/DriverList'\nimport DriverForm from './components/driver/DriverForm'\n\nimport CustomerList from './components/customer/CustomerList'\nimport CustomerForm from './components/customer/CustomerForm'\n\nimport TermList from './components/terms/TermList'\nimport TermForm from './components/terms/TermForm'\n\nimport PrivacyList from './components/privacy/PrivacyList'\nimport PrivacyForm from './components/privacy/PrivacyForm'\n\n\nimport BookingList from './components/booking/BookingList'\nimport BookingForm from './components/booking/BookingForm'\n\nimport AboutusList from './components/aboutus/AboutusList'\nimport AboutusForm from './components/aboutus/AboutusForm'\n\nimport ChangePassword from './components/admin/ChangePassword'\n\nimport Dashboard from './components/dashboard/Dashboard'\n\nimport Header from './components/header/Header'\nimport Menu from './components/menu/Menu'\nimport Footer from './components/footer/Footer'\n\nimport { getToken } from './actions/admin'\nimport { Switch, Redirect,  Route } from 'react-router-dom';\n\n\n\n\nfunction SecuredPath(props){\n\n      const authentication ={\n            isAuthenticated : getToken() !== null ? JSON.parse(getToken()).isAuthenticated: false\n      }\n      \n      console.log('JSON.parse(getToken())---',JSON.parse(getToken()))\n\n      console.log('authentication.isAuthenticated--',authentication.isAuthenticated)\n\n      return (\n            <Route path={props.path} render = { data => \n                  authentication.isAuthenticated ? \n                  (\n                        <props.component {...data}>\n                              \n                        </props.component>\n                  )\n                  :\n                  (\n                        <Redirect to=\"/login\"  />\n                  )\n                  }>\n\n            </Route>\n      )\n}\n\n\nfunction App() {\n                  console.log('getToken----',getToken());\n                  console.log('window.location.href----',window.location.href);\n                  var lastIndex = window.location.href.lastIndexOf(\"/\")\n\n                  var urlPath = window.location.href.substring(lastIndex + 1); //after this urlPath=\"true\"\n                  console.log('path----',urlPath);\n\n                  let isAuthenticated = getToken() !== null ? JSON.parse(getToken()).isAuthenticated: false\n                  return (\n                              \n                              <div className=\"App\">\n\n                                    <Switch>\n                                          {/* <Route exact path=\"/\" render={ () => {\n                                                      return (\n                                                            isAuthenticated === false ?\n                                                            <Redirect to=\"/login\" /> :\n                                                            <Redirect to=\"/dashboard\" /> \n                                                      )\n                                                }}\n                                          /> */}\n                                          <SecuredPath path=\"/dashboard\" exact component={() => { return <Dashboard />}} />\n                                          <Route path=\"/\" exact component={() => { return <LoginForm />}} /> \n                                          <Route path=\"/login\" exact component={() => { return <LoginForm />}} /> \n                                          \n                                          <SecuredPath path=\"/admin\" exact component={() => { return <AdminList />}} /> \n                                          <SecuredPath path='/admin/view/:id' exact component={AdminForm} />    \n                                          <SecuredPath path='/admin/edit/:id' exact component={AdminForm} />    \n                                          <SecuredPath path='/admin/add' exact component={AdminForm} />    \n                                          <SecuredPath path=\"/admin/delete/:id\" exact component={AdminForm} />\n\n                                          <SecuredPath path=\"/changepassword\" exact component={() => { return <ChangePassword />}} /> \n\n                                          \n                                          \n                                          <SecuredPath path=\"/driver\" exact component={() => { return <DriverList />}} /> \n                                          <SecuredPath path='/driver/view/:id' component={DriverForm} />    \n                                          <SecuredPath path='/driver/edit/:id' component={DriverForm} />    \n                                          <SecuredPath path='/driver/add' component={DriverForm} />    \n                                          <SecuredPath path=\"/driver/delete/:id\" component={DriverForm} />\n                                          \n                                          <SecuredPath path=\"/customer\" exact component={() => { return <CustomerList />}} /> \n                                          <SecuredPath path='/customer/view/:id' component={CustomerForm} />    \n                                          <SecuredPath path='/customer/edit/:id' component={CustomerForm} />    \n                                          <SecuredPath path='/customer/add' component={CustomerForm} />    \n                                          <SecuredPath path=\"/customer/delete/:id\" component={CustomerForm} />\n\n\n                                          <SecuredPath path=\"/term/\" exact component={() => { return <TermList />}} /> \n                                          <SecuredPath path=\"/term/edit/:id\" exact component={() => { return <TermForm />}} /> \n                                            \n                                          <SecuredPath path=\"/privacy/\" exact component={() => { return <PrivacyList />}} /> \n                                          <SecuredPath path=\"/privacy/edit/:id\" exact component={() => { return <PrivacyForm />}} /> \n                                            \n                                          <SecuredPath path=\"/booking/\" exact component={() => { return <BookingList />}} /> \n                                          <SecuredPath path=\"/booking/edit/:id\" exact component={() => { return <BookingForm />}} /> \n                                          <SecuredPath path=\"/booking/view/:id\" exact component={() => { return <BookingForm />}} /> \n                                            \n\n                                          <SecuredPath path=\"/aboutus/\" exact component={() => { return <AboutusList />}} /> \n                                          <SecuredPath path=\"/aboutus/edit/:id\" exact component={() => { return <AboutusForm />}} /> \n                                            \n                                    </Switch>\n                                    <Footer />\n                              </div>\n                             \n                  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\n\r\nimport {\r\n    POST_ADMIN_LOGIN_START,\r\n    POST_ADMIN_LOGIN_SUCCESS,\r\n    POST_ADMIN_LOGIN_FAILURE,\r\n    POST_ADMIN_LOGINOUT_SUCCESS,  \r\n    \r\n    FETCH_ADMIN_LIST_START,\r\n    FETCH_ADMIN_LIST_SUCCESS,\r\n    FETCH_ADMIN_LIST_FAILURE,\r\n\r\n    POST_ADMIN_ADD_START,\r\n    POST_ADMIN_ADD_SUCCESS,\r\n    POST_ADMIN_ADD_FAILURE,\r\n\r\n    POST_ADMIN_EDIT_START,\r\n    POST_ADMIN_EDIT_SUCCESS,\r\n    POST_ADMIN_EDIT_FAILURE,\r\n\r\n    POST_ADMIN_CHANGEPASSWORD_START,\r\n    POST_ADMIN_CHANGEPASSWORD_SUCCESS,\r\n    POST_ADMIN_CHANGEPASSWORD_FAILURE,\r\n\r\n    POST_ADMIN_DELETE_START,\r\n    POST_ADMIN_DELETE_SUCCESS,\r\n    POST_ADMIN_DELETE_FAILURE,\r\n\r\n    FETCH_USER_LIST_START,\r\n    FETCH_USER_LIST_SUCCESS,\r\n    FETCH_USER_LIST_FAILURE,\r\n\r\n    POST_USER_ADD_START,\r\n    POST_USER_ADD_SUCCESS,\r\n    POST_USER_ADD_FAILURE,    \r\n\r\n    POST_USER_EDIT_START,\r\n    POST_USER_EDIT_SUCCESS,\r\n    POST_USER_EDIT_FAILURE,\r\n\r\n    POST_SEND_EMAIL_START,\r\n    POST_SEND_EMAIL_SUCCESS,\r\n    POST_SEND_EMAIL_FAILURE,\r\n\r\n    POST_USER_DELETE_START,\r\n    POST_USER_DELETE_SUCCESS,\r\n    POST_USER_DELETE_FAILURE,\r\n\r\n    FETCH_BOOKING_LIST_START,\r\n    FETCH_BOOKING_LIST_SUCCESS,\r\n    FETCH_BOOKING_LIST_FAILURE\r\n\r\n} from  '../actions/admin'\r\n//fetchBooking\r\n//postSendEmail\r\nconst initialState = {\r\n        list            : { success: false , STATUSCODE:200, error: false , response : {docs:[]}},\r\n        userList        : { success: false ,STATUSCODE:200, error: false , response : {docs:[]}},\r\n        bookingList     : { success: false ,STATUSCODE:200, error: false , response : {docs:[]}},\r\n        login           : { success: false ,STATUSCODE:200, error: false , response : {}},\r\n        sendEmail       : { success: false ,STATUSCODE:200, error: false , response : {}},\r\n        changepassword  : { success: false ,STATUSCODE:200, error: false , response : {}},\r\n        ismailsend      : false,\r\n        message         : 'Welcome To Calaf Admin',\r\n        isloading       : false,\r\n        isSuccess       : false\r\n}\r\n\r\nexport default( state=initialState, action) =>{\r\n\r\n    const newState = {...state}\r\n\r\n    switch(action.type){\r\n\r\n        case POST_ADMIN_LOGIN_START:\r\n        return {\r\n            ...state,\r\n            isloading:true\r\n        };\r\n        case POST_ADMIN_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                login:action.payload\r\n            };\r\n        case POST_ADMIN_LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };  \r\n        case POST_ADMIN_LOGINOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                login:action.payload\r\n            };    \r\n                    \r\n        case FETCH_ADMIN_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_ADMIN_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                list:action.payload,\r\n                isSuccess   : action.payload.success,\r\n            };\r\n        case FETCH_ADMIN_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n        case POST_ADMIN_CHANGEPASSWORD_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case POST_ADMIN_CHANGEPASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                changepassword:action.payload\r\n            };\r\n        case POST_ADMIN_CHANGEPASSWORD_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n\r\n        case POST_ADMIN_ADD_START:\r\n            return {\r\n                ...state,\r\n                isloading:true,\r\n                isSuccess:false,\r\n\r\n            };\r\n        case POST_ADMIN_ADD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                isSuccess   : action.payload.success,\r\n                message     : action.payload.message\r\n            };\r\n        case POST_ADMIN_ADD_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                isSuccess:false,\r\n                message     : action.payload\r\n\r\n            }; \r\n\r\n        case POST_ADMIN_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isloading:true,\r\n                isSuccess:false,\r\n                message     : null\r\n\r\n            };\r\n        case POST_ADMIN_EDIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                isSuccess   : action.payload.success,\r\n                message     : action.payload.message\r\n            };\r\n        case POST_ADMIN_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                isSuccess:false,\r\n                message : action.payload\r\n\r\n            };             \r\n\r\n        case POST_ADMIN_DELETE_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case POST_ADMIN_DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n            };\r\n        case POST_ADMIN_DELETE_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            }; \r\n\r\n        case FETCH_USER_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_USER_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                userList:action.payload,\r\n                isSuccess   : action.payload.success,\r\n            };\r\n        case FETCH_USER_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n        case POST_USER_ADD_START:\r\n            return {\r\n                ...state,\r\n                isloading   : true,\r\n                isSuccess   : false,\r\n            };\r\n        case POST_USER_ADD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading   : false,\r\n                isSuccess   : action.payload.success,\r\n                message     : action.payload.message\r\n            };\r\n        case POST_USER_ADD_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading   : false,\r\n                isSuccess   : false,\r\n                message     : action.payload\r\n\r\n            };  \r\n\r\n        case POST_USER_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isloading   : true,\r\n                isSuccess   : false,\r\n                message     : null\r\n\r\n            };\r\n        case POST_USER_EDIT_SUCCESS:\r\n        console.log('action.payload---->',action.payload);\r\n        \r\n            return {\r\n                ...state,\r\n                isloading   : false,\r\n                isSuccess   : action.payload.success,\r\n                message     : action.payload.message\r\n            };\r\n        case POST_USER_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading   : false,\r\n                isSuccess   : false,\r\n                message     : action.payload\r\n\r\n            };             \r\n\r\n\r\n        case POST_SEND_EMAIL_START:\r\n            return {\r\n                ...state,\r\n                isloading   : true,\r\n                ismailsend   : false,\r\n                sendmailmessage     : null\r\n\r\n            };\r\n        case POST_SEND_EMAIL_SUCCESS:\r\n        console.log('action.payload---->',action.payload);\r\n        \r\n            return {\r\n                ...state,\r\n                isloading       : false,\r\n                ismailsend      : true,\r\n                isloading       : false,\r\n                sendmailmessage : action.payload.message\r\n            };\r\n        case POST_SEND_EMAIL_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading        : false,\r\n                ismailsend       : false,\r\n                sendmailmessage  : action.payload\r\n            }; \r\n\r\n\r\n        case POST_USER_DELETE_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case POST_USER_DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n            };\r\n        case POST_USER_DELETE_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };  \r\n                       \r\n\r\n        case FETCH_BOOKING_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_BOOKING_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                bookingList:action.payload,\r\n                isSuccess   : action.payload.success,\r\n            };\r\n        case FETCH_BOOKING_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n        default :\r\n            return state\r\n    }\r\n    //console.log(newState);\r\n    \r\n    \r\n}\r\n\r\n//export default reducer","\r\n\r\nimport {\r\n    \r\n    FETCH_PRIVACY_LIST_START,\r\n    FETCH_PRIVACY_LIST_SUCCESS,\r\n    FETCH_PRIVACY_LIST_FAILURE,\r\n\r\n    POST_PRIVACY_EDIT_START,\r\n    POST_PRIVACY_EDIT_SUCCESS,\r\n    POST_PRIVACY_EDIT_FAILURE,\r\n\r\n\r\n} from  '../actions/privacy'\r\n\r\n\r\nconst initialState = {\r\n    privacylist:{ success: false ,STATUSCODE:2000, error: false , response : {docs:[]}},\r\n    isSuccess:false,\r\n    isloading:false\r\n}\r\n\r\nexport default( state=initialState, action) =>{\r\n\r\n    const newState = {...state}\r\n\r\n    switch(action.type){\r\n        \r\n        case FETCH_PRIVACY_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_PRIVACY_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                privacylist:action.payload\r\n            };\r\n        case FETCH_PRIVACY_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n\r\n        case POST_PRIVACY_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:true\r\n            };\r\n        case POST_PRIVACY_EDIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isSuccess:true,\r\n                isloading:false,\r\n            };\r\n        case POST_PRIVACY_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:false\r\n            };                      \r\n\r\n        default :\r\n            return state\r\n    }\r\n    //console.log(newState);\r\n    \r\n    \r\n}\r\n","\r\n\r\nimport {\r\n    \r\n    FETCH_TERM_LIST_START,\r\n    FETCH_TERM_LIST_SUCCESS,\r\n    FETCH_TERM_LIST_FAILURE,\r\n\r\n    POST_TERM_EDIT_START,\r\n    POST_TERM_EDIT_SUCCESS,\r\n    POST_TERM_EDIT_FAILURE,\r\n\r\n\r\n} from  '../actions/terms'\r\n\r\n\r\nconst initialState = {\r\n    termlist:{ success: false ,STATUSCODE:2000, error: false , response : {docs:[]}},\r\n    isSuccess:false,\r\n    isloading:false\r\n}\r\n\r\nexport default( state=initialState, action) =>{\r\n\r\n    const newState = {...state}\r\n\r\n    switch(action.type){\r\n        \r\n        case FETCH_TERM_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_TERM_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                termlist:action.payload\r\n            };\r\n        case FETCH_TERM_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n\r\n        case POST_TERM_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:true\r\n            };\r\n        case POST_TERM_EDIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isSuccess:true,\r\n                isloading:false,\r\n            };\r\n        case POST_TERM_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:false\r\n            };                      \r\n\r\n        default :\r\n            return state\r\n    }\r\n    //console.log(newState);\r\n    \r\n    \r\n}\r\n","\r\n\r\nimport {\r\n    \r\n    FETCH_ABOUTUS_LIST_START,\r\n    FETCH_ABOUTUS_LIST_SUCCESS,\r\n    FETCH_ABOUTUS_LIST_FAILURE,\r\n\r\n    POST_ABOUTUS_EDIT_START,\r\n    POST_ABOUTUS_EDIT_SUCCESS,\r\n    POST_ABOUTUS_EDIT_FAILURE,\r\n\r\n\r\n} from  '../actions/aboutus'\r\n\r\n\r\nconst initialState = {\r\n    aboutuslist:{ success: false ,STATUSCODE:2000, error: false , response : {docs:[]}},\r\n    isSuccess:false,\r\n    isloading:false\r\n}\r\n\r\nexport default( state=initialState, action) =>{\r\n\r\n    const newState = {...state}\r\n\r\n    switch(action.type){\r\n        \r\n        case FETCH_ABOUTUS_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_ABOUTUS_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                aboutuslist:action.payload\r\n            };\r\n        case FETCH_ABOUTUS_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n\r\n        case POST_ABOUTUS_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:true\r\n            };\r\n        case POST_ABOUTUS_EDIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isSuccess:true,\r\n                isloading:false,\r\n            };\r\n        case POST_ABOUTUS_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:false\r\n            };                      \r\n\r\n        default :\r\n            return state\r\n    }\r\n    //console.log(newState);\r\n    \r\n    \r\n}\r\n","\r\n\r\nimport {\r\n    \r\n    FETCH_BOOKING_LIST_START,\r\n    FETCH_BOOKING_LIST_SUCCESS,\r\n    FETCH_BOOKING_LIST_FAILURE,\r\n\r\n    POST_BOOKING_EDIT_START,\r\n    POST_BOOKING_EDIT_SUCCESS,\r\n    POST_BOOKING_EDIT_FAILURE,\r\n\r\n    FETCH_DRIVER_LIST_START,\r\n    FETCH_DRIVER_LIST_SUCCESS,\r\n    FETCH_DRIVER_LIST_FAILURE,\r\n\r\n    FETCH_CUSTOMER_LIST_START,\r\n    FETCH_CUSTOMER_LIST_SUCCESS,\r\n    FETCH_CUSTOMER_LIST_FAILURE,\r\n} from  '../actions/booking'\r\n\r\n\r\nconst initialState = {\r\n    bookinglist : { success: false ,STATUSCODE:2000, error: false , response : {docs:[]} },\r\n    driverlist  : { success: false ,STATUSCODE:2000, error: false , response : {docs:[]} },\r\n    customerlist  : { success: false ,STATUSCODE:2000, error: false , response : {docs:[]} },\r\n    isSuccess:false,\r\n    isloading:false\r\n}\r\n\r\nexport default( state=initialState, action) =>{\r\n\r\n    const newState = {...state}\r\n\r\n    switch(action.type){\r\n        \r\n        case FETCH_BOOKING_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_BOOKING_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                bookinglist:action.payload\r\n            };\r\n        case FETCH_BOOKING_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n\r\n        case POST_BOOKING_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:true\r\n            };\r\n        case POST_BOOKING_EDIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isSuccess:true,\r\n                isloading:false,\r\n            };\r\n        case POST_BOOKING_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:false\r\n            };                      \r\n            \r\n        case FETCH_DRIVER_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_DRIVER_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                driverlist:action.payload\r\n            };\r\n        case FETCH_DRIVER_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n        case FETCH_CUSTOMER_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_CUSTOMER_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                customerlist:action.payload\r\n            };\r\n        case FETCH_CUSTOMER_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n        default :\r\n            return state\r\n    }\r\n    //console.log(newState);\r\n    \r\n    \r\n}\r\n","\r\nimport { combineReducers } from 'redux'\r\n\r\nimport adminReducer from './adminReducer'\r\nimport privacyReducer from './privacyReducer'\r\nimport termReducer from './termReducer'\r\nimport aboutusReducer from './aboutusReducer'\r\nimport bookingReducer from './bookingReducer'\r\n\r\n\r\nexport default combineReducers ({\r\n\r\n        adminReducer,\r\n        privacyReducer,\r\n        termReducer,\r\n        aboutusReducer,\r\n        bookingReducer\r\n\r\n\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer  from './reducers'\r\n\r\n// for multi middleware take them in array applyMiddleware( [thunk1, thunk2] )\r\nexport default createStore(rootReducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux'\n\nimport store from './store' \n\nconst AppWithProvider = (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n)\n\nReactDOM.render(AppWithProvider,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}